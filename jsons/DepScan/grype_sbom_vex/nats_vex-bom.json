{"id": "CVE-2019-13126", "package": "golang:github.com/nats-io/nats-server/v2", "purl": "pkg:golang/github.com/nats-io/nats-server/v2@v0.0.0-20240111053235-a5298e2a18a5", "package_type": "golang", "package_usage": "N/A", "version": "v0.0.0-20240111053235-a5298e2a18a5", "fix_version": "2.2.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Integer Overflow or Wraparound in NATS Server\nAn integer overflow in NATS Server before 2.2.0 allows a remote attacker to crash the server by sending a crafted request.\n\n### Specific Go Packages Affected\ngithub.com/nats-io/nats-server/v2/server", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2019-13126", "https://github.com/nats-io/nats-server/pull/1053", "https://github.com/nats-io/nats-server/pull/1441", "https://github.com/nats-io/nats-server/commit/07ef71ff98f45f8c2711be4aeaf484610d891dda", "https://github.com/nats-io/nats-server/commits/master", "https://www.twistlock.com/labs-blog/finding-dos-vulnerability-nats-go-fuzz-cve-2019-13126"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-26892", "package": "golang:github.com/nats-io/nats-server/v2", "purl": "pkg:golang/github.com/nats-io/nats-server/v2@v0.0.0-20240111053235-a5298e2a18a5", "package_type": "golang", "package_usage": "N/A", "version": "v0.0.0-20240111053235-a5298e2a18a5", "fix_version": "2.2.0", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Incorrect handling of credential expiry by /nats-io/nats-server\n\n## Problem Description\n\nNATS nats-server through 2020-10-07 has Incorrect Access Control because of how expired credentials are handled.\n\nThe NATS accounts system has expiration timestamps on credentials; the <https://github.com/nats-io/jwt> library had an API which encouraged misuse and an `IsRevoked()` method which misused its own API.\n\nA new `IsClaimRevoked()` method has correct handling and the nats-server has been updated to use this.\tThe old `IsRevoked()` method now always returns true and other client code will have to be updated to avoid calling it.\n\nThe CVE identifier should cover any application using the old JWT API, where the nats-server is one of those applications.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 1.1.0\n * fixed after nats-io/jwt PR 103 landed (2020-10-06)\n\n#### NATS Server\n\n * Version 2 prior to 2.1.9\n\t + 2.0.0 through and including 2.1.8 are vulnerable.\n * fixed with nats-io/nats-server PRs 1632, 1635, 1645\n\n\n## Impact\n\nTime-based credential expiry did not work.\n\n\n## Workaround\n\nHave credentials which only expire after fixes can be deployed.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts.\n\n## Related CVE(s)\nCVE-2020-26892, GHSA-2c64-vj8g-vwrq, GO-2022-0380", "related_urls": ["https://github.com/nats-io/jwt/security/advisories/GHSA-4w5x-x539-ppf5", "https://nvd.nist.gov/vuln/detail/CVE-2020-26892", "https://github.com/nats-io/jwt/commit/e11ce317263cef69619fc1ca743b195d02aa1d8a", "https://github.com/nats-io/nats-server/commit/1e08b67f08e18cd844dce833a265aaa72500a12f", "https://advisories.nats.io/CVE/CVE-2020-26892.txt", "https://github.com/nats-io/nats-server/commits/master", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI", "https://pkg.go.dev/vuln/GO-2022-0380", "https://www.openwall.com/lists/oss-security/2020/11/02/2"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-28466", "package": "golang:github.com/nats-io/nats-server/v2", "purl": "pkg:golang/github.com/nats-io/nats-server/v2@v0.0.0-20240111053235-a5298e2a18a5", "package_type": "golang", "package_usage": "N/A", "version": "v0.0.0-20240111053235-a5298e2a18a5", "fix_version": "2.2.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Denial of service in github.com/nats-io/nats-server/server\nThis affects all versions of package github.com/nats-io/nats-server/server. Untrusted accounts are able to crash the server using configs that represent a service export/import cycles. Disclaimer from the maintainers - Running a NATS service which is exposed to untrusted users presents a heightened risk. Any remote execution flaw or equivalent seriousness, or denial-of-service by unauthenticated users, will lead to prompt releases by the NATS maintainers. Fixes for denial of service issues with no threat of remote execution, when limited to account holders, are likely to just be committed to the main development branch with no special attention. Those who are running such services are encouraged to build regularly from git.\n\n## Related CVE(s)\nBIT-nats-2020-28466, CVE-2020-28466, SNYK-GOLANG-GITHUBCOMNATSIONATSSERVERSERVER-1042967", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2020-28466", "https://github.com/nats-io/nats-server/pull/1731", "https://github.com/nats-io/nats-server/pull/1731/commits/2e3c22672936f4980d343fb1d328b38919e74796", "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMNATSIONATSSERVERSERVER-1042967", "http://www.openwall.com/lists/oss-security/2021/03/16/1", "http://www.openwall.com/lists/oss-security/2021/03/16/2"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "GHSA-gwj5-3vfq-q992", "package": "golang:github.com/nats-io/nats-server/v2", "purl": "pkg:golang/github.com/nats-io/nats-server/v2@v0.0.0-20240111053235-a5298e2a18a5", "package_type": "golang", "package_usage": "N/A", "version": "v0.0.0-20240111053235-a5298e2a18a5", "fix_version": "2.2.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Import loops in account imports, nats-server DoS\n(This advisory is canonically <https://advisories.nats.io/CVE/CVE-2020-28466.txt>)\n\n## Problem Description\n\nAn export/import cycle between accounts could crash the nats-server, after consuming CPU and memory.\n\nThis issue was fixed publicly in <https://github.com/nats-io/nats-server/pull/1731> in November 2020.\n\nThe need to call this out as a security issue was highlighted by `snyk.io` and we are grateful for their assistance in doing so.\n\nOrganizations which run a NATS service providing access to accounts run by untrusted third parties are affected.\nSee below for an important caveat if running such a service.\n\n\n## Affected versions\n\n#### NATS Server\n\n * Version 2 prior to 2.2.0\n\t + 2.0.0 through and including 2.1.9 are vulnerable.\n * fixed with nats-io/nats-server PR 1731, commit 2e3c226729\n\n\n## Impact\n\nThe nats-server could be killed, after consuming resources.\n\n\n## Workaround\n\nThe import cycle requires at least two accounts to work; if you have open account sign-up, then restricting new account sign-up might hinder an attacker.\n\n\n## Solution\n\nUpgrade the nats-server.\n\n\n## Caveat on NATS with untrusted users\n\nRunning a NATS service which is exposed to untrusted users presents a heightened risk.\n\nAny remote execution flaw or equivalent seriousness, or denial-of-service by unauthenticated users, will lead to prompt releases by the NATS maintainers.\n\nFixes for denial of service issues with no threat of remote execution, when limited to account holders, are likely to just be committed to the main development branch with no special attention.\n\nThose who are running such services are encouraged to build regularly from git.", "related_urls": ["https://github.com/nats-io/nats-server/security/advisories/GHSA-gwj5-3vfq-q992"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-24783", "package": "golang:stdlib", "purl": "pkg:golang/stdlib@1.21.6", "package_type": "golang", "package_usage": "N/A", "version": "1.21.6", "fix_version": "1.21.9", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Verify panics on certificates with an unknown public key algorithm in crypto/x509\nVerifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.\n\n## Related CVE(s)\nBIT-golang-2024-24783, CVE-2024-24783", "related_urls": ["https://go.dev/issue/65390", "https://go.dev/cl/569339", "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-45289", "package": "golang:stdlib", "purl": "pkg:golang/stdlib@1.21.6", "package_type": "golang", "package_usage": "N/A", "version": "1.21.6", "fix_version": "1.21.9", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Incorrect forwarding of sensitive headers and cookies on HTTP redirect in net/http\nWhen following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.\n\n## Related CVE(s)\nBIT-golang-2023-45289, CVE-2023-45289", "related_urls": ["https://go.dev/issue/65065", "https://go.dev/cl/569340", "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-45290", "package": "golang:stdlib", "purl": "pkg:golang/stdlib@1.21.6", "package_type": "golang", "package_usage": "N/A", "version": "1.21.6", "fix_version": "1.21.9", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Memory exhaustion in multipart form parsing in net/textproto and net/http\nWhen parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.\n\n## Related CVE(s)\nBIT-golang-2023-45290, CVE-2023-45290", "related_urls": ["https://go.dev/issue/65383", "https://go.dev/cl/569341", "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-24784", "package": "golang:stdlib", "purl": "pkg:golang/stdlib@1.21.6", "package_type": "golang", "package_usage": "N/A", "version": "1.21.6", "fix_version": "1.21.9", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Comments in display names are incorrectly handled in net/mail\nThe ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.\n\n## Related CVE(s)\nBIT-golang-2024-24784, CVE-2024-24784", "related_urls": ["https://go.dev/issue/65083", "https://go.dev/cl/555596", "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-24785", "package": "golang:stdlib", "purl": "pkg:golang/stdlib@1.21.6", "package_type": "golang", "package_usage": "N/A", "version": "1.21.6", "fix_version": "1.21.9", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Errors returned from JSON marshaling may break template escaping in html/template\nIf errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.\n\n## Related CVE(s)\nBIT-golang-2024-24785, CVE-2024-24785", "related_urls": ["https://go.dev/issue/65697", "https://go.dev/cl/564196", "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-45288", "package": "golang:stdlib", "purl": "pkg:golang/stdlib@1.21.6", "package_type": "golang", "package_usage": "N/A", "version": "1.21.6", "fix_version": "1.21.9", "severity": "LOW", "cvss_score": "2.0", "short_description": "# HTTP/2 CONTINUATION flood in net/http\nAn attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames.\n\nMaintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed.\n\nThis permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send.\n\nThe fix sets a limit on the amount of excess header frames we will process before closing a connection.\n\n## Related CVE(s)\nBIT-golang-2023-45288, CVE-2023-45288, GHSA-4v7x-pqxf-cx7m", "related_urls": ["https://go.dev/issue/65051", "https://go.dev/cl/576155", "https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3127", "package": "golang:github.com/nats-io/nats-server/v2", "purl": "pkg:golang/github.com/nats-io/nats-server/v2@v0.0.0-20240111053235-a5298e2a18a5", "package_type": "golang", "package_usage": "N/A", "version": "v0.0.0-20240111053235-a5298e2a18a5", "fix_version": "2.2.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# github.com/nats-io/nats-server/ Import token permissions checking not enforced\n(This advisory is canonically <https://advisories.nats.io/CVE/CVE-2021-3127.txt>)\n\n## Problem Description\n\nThe NATS server provides for Subjects which are namespaced by Account; all Subjects are supposed to be private to an account, with an Export/Import system used to grant cross-account access to some Subjects.\tSome Exports are public, such that anyone can import the relevant subjects, and some Exports are private, such that the Import requires a token JWT to prove permission.\n\nThe JWT library's validation of the bindings in the Import Token incorrectly warned on mismatches, instead of outright rejecting the token.\n\nAs a result, any account can take an Import token used by any other account and re-use it for themselves because the binding to the importing account is not rejected, and use it to import *any* Subject from the Exporting account, not just the Subject referenced in the Import Token.\n\nThe NATS account-server system treats account JWTs as semi-public information, such that an attacker can easily enumerate all account JWTs and retrieve all Import Tokens from those account JWTs.\n\nThe CVE identifier should cover the JWT library repair and the nats-server containing the fixed JWT library, and any other application depending upon the fixed JWT library.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 2.0.1\n * fixed after nats-io/jwt#149 landed (2021-03-14)\n\n#### NATS Server\n\n * Version 2 prior to 2.2.0\n\t + 2.0.0 through and including 2.1.9 are vulnerable\n * fixed with nats-io/nats-server@423b79440c (2021-03-14)\n\n\n## Impact\n\nIn deployments with untrusted accounts able to update the Account Server with imports, a malicious account can access any Subject from an account which provides Exported Subjects.\n\nAbuse of this facility requires the malicious actor to upload their tampered Account JWT to the Account Server, providing the service operator with a data-store which can be scanned for signs of abuse.\n\n\n## Workaround\n\nDeny access to clients to update their account JWT in the account server.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts (with private Exports; Account owners can create those at any time though).\n\nAudit all accounts JWTs to scan for exploit attempts; a Python script to audit the accounts can be found at <https://gist.github.com/philpennock/09d49524ad98043ff11d8a40c2bb0d5a>.\n\n## Related CVE(s)\nBIT-nats-2021-3127, CVE-2021-3127, GHSA-62mh-w5cv-p88c, GHSA-9r5x-fjv3-q6h4, GO-2022-0386", "related_urls": ["https://github.com/nats-io/nats-server/security/advisories/GHSA-j756-f273-xhp4", "https://nvd.nist.gov/vuln/detail/CVE-2021-3127", "https://github.com/nats-io/jwt/pull/149", "https://advisories.nats.io/CVE/CVE-2021-3127.txt"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-26521", "package": "golang:github.com/nats-io/nats-server/v2", "purl": "pkg:golang/github.com/nats-io/nats-server/v2@v0.0.0-20240111053235-a5298e2a18a5", "package_type": "golang", "package_usage": "N/A", "version": "v0.0.0-20240111053235-a5298e2a18a5", "fix_version": "2.2.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Nil dereference in NATS JWT causing DoS of nats-server\n(This advisory is canonically <https://advisories.nats.io/CVE/CVE-2020-26521.txt>)\n\n## Problem Description\n\nThe NATS account system has an Operator trusted by the servers, which signs Accounts, and each Account can then create and sign Users within their account.\tThe Operator should be able to safely issue Accounts to other entities which it does not fully trust.\n\nA malicious Account could create and sign a User JWT with a state not created by the normal tooling, such that decoding by the NATS JWT library (written in Go) would attempt a nil dereference, aborting execution.\n\nThe NATS Server is known to be impacted by this.\n\n\n## Affected versions\n\n#### JWT library\n\n * all versions prior to 1.1.0\n\n#### NATS Server\n\n * Version 2 prior to 2.1.9\n\n\n## Impact\n\n#### JWT library\n\n * Programs would nil dereference and panic, aborting execution by default.\n\n#### NATS server\n\n * Denial of Service caused by process termination\n\n\n## Workaround\n\nIf your NATS servers do not trust any accounts which are managed by untrusted entities, then malformed User credentials are unlikely to be encountered.\n\n\n## Solution\n\nUpgrade the JWT dependency in any application using it.\n\nUpgrade the NATS server if using NATS Accounts.\n\n## Related CVE(s)\nCVE-2020-26521, GHSA-h2fg-54x9-5qhq, GO-2022-0402", "related_urls": ["https://github.com/nats-io/nats-server/security/advisories/GHSA-hmm9-r2m2-qg9w", "https://nvd.nist.gov/vuln/detail/CVE-2020-26521", "https://github.com/nats-io/jwt/pull/107", "https://advisories.nats.io/CVE/CVE-2020-26521.txt", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VT67XCLIIBYRT762SVFBYFFTQFVSM3SI", "https://www.openwall.com/lists/oss-security/2020/11/02/2"], "occurrence_count": 0, "reachable_flows": 0}
