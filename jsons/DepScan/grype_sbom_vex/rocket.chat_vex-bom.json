{"id": "NPM-1078304", "package": "npm:monorepo-symlink-test", "purl": "pkg:npm/monorepo-symlink-test@0.0.0", "package_type": "npm", "package_usage": "N/A", "version": "0.0.0", "fix_version": null, "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# Malware in monorepo symlink test\nAny computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer. The package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.\nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "NPM-1086450", "package": "npm:highlight.js", "purl": "pkg:npm/highlight.js@11.6.0", "package_type": "npm", "package_usage": "N/A", "version": "11.6.0", "fix_version": "10.4.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# ReDOS vulnerabities: multiple grammars\n### Impact: Potential ReDOS vulnerabilities (exponential and polynomial RegEx backtracking)\n\n[oswasp (https://owasp.org/www community/attacks/Regular_expression_Denial_of_Service_ _ReDoS): \n\n> The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\n\nIf are you are using Highlight.js to highlight user provided data you are possibly vulnerable.\tOn the client side (in a browser or Electron environment) risks could include lengthy freezes or crashes... On the server side infinite freezes could occur... effectively preventing users from accessing your app or service (ie, Denial of Service).\n\nThis is an issue with grammars shipped with the parser (and potentially 3rd party grammars also), not the parser itself. If you are using Highlight.js with any of the following grammars you are vulnerable.\tIf you are using `highlightAuto` to detect the language (and have any of these grammars registered) you are vulnerable. Exponential grammars (C, Perl, JavaScript) are auto registered when using the common grammar subset/library `require('highlight.js/lib/common')` as of 10.4.0\t see https://cdn.jsdelivr.net/gh/highlightjs/cdn release@10.4.0/build/highlight.js\n\nAll versions prior to 10.4.1 are vulnerable, including version 9.18.5. \n\n**Grammars with exponential backtracking issues:**\n\n\t\tc like (c, cpp, arduino)\n\t\thandlebars (htmlbars)\n\t\tgams\n\t\tperl\n\t\tjboss cli\n\t\tr\n\t\terlang repl\n\t\tpowershell\n\t\trouteros\n\t\tlivescript (10.4.0 and 9.18.5 included this fix)\n\t\tjavascript & typescript (10.4.0 included partial fixes)\n\nAnd of course any aliases of those languages have the same issue. ie: `hpp` is no safer than `cpp`.\n\n**Grammars with polynomial backtracking issues:**\n\n\tkotlin\n\tgcode\n\td\n\taspectj\n\tmoonscript\n\tcoffeescript/livescript\n\tcsharp\n\tscilab\n\tcrystal\n\telixir\n\tbasic\n\tebnf\n\truby\n\tfortran/irpf90\n\tlivecodeserver\n\tyaml\n\tx86asm\n\tdsconfig\n\tmarkdown\n\truleslanguage\n\txquery\n\tsqf\n\nAnd again: any aliases of those languages have the same issue. ie: `ruby` and `rb` share the same ruby issues.\n\n\n### Patches\n\n\tVersion 10.4.1 resolves these vulnerabilities.\tPlease upgrade.\n\n### Workarounds / Mitigations\n\n\tDiscontinue use the affected grammars. (or perhaps use only those with poly vs exponential issues)\n\tAttempt cherry picking the grammar fixes into older versions...\n\tAttempt using newer CDN versions of any affected languages.\t(ie using an older CDN version of the library with newer CDN grammars).\tYour mileage may vary.\n\n### References\n\n\thttps://owasp.org/www community/attacks/Regular_expression_Denial_of_Service_ _ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue: https://github.com/highlightjs/highlight.js/issues\n* Email us at [security@highlightjs.com (mailto:security@highlightjs.com)\nUpgrade to version 10.4.1 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "NPM-1088594", "package": "npm:d3-color", "purl": "pkg:npm/d3-color@2.0.0", "package_type": "npm", "package_usage": "N/A", "version": "2.0.0", "fix_version": "3.1.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# d3 color vulnerable to ReDoS\nThe d3 color module provides representations for various color spaces in the browser. Versions prior to 3.1.0 are vulnerable to a Regular expression Denial of Service. This issue has been patched in version 3.1.0. There are no known workarounds.\nUpgrade to version 3.1.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-26938", "package": "npm:oauth2-server", "purl": "pkg:npm/oauth2-server@2.4.1", "package_type": "npm", "package_usage": "N/A", "version": "2.4.1", "fix_version": null, "severity": "HIGH", "cvss_score": "7.2", "short_description": "# oauth2 server through 3.1.1 vulnerable to Open Redirect\nIn oauth2 server (aka node oauth2 server) through 3.1.1, the value of the `redirect_uri` parameter received during the authorization and token request is checked against an incorrect URI pattern (`[a zA Z [a zA Z0 9+.\t+:`) before making a redirection. This allows a malicious client to pass an XSS payload through the redirect_uri parameter while making an authorization request. NOTE: this vulnerability is similar to CVE 2020 7741.\nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-33987", "package": "npm:got", "purl": "pkg:npm/got@6.7.1", "package_type": "npm", "package_usage": "N/A", "version": "6.7.1", "fix_version": "11.8.5", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Got allows a redirect to a UNIX socket\nThe got package before 11.8.5 and 12.1.0 for Node.js allows a redirect to a UNIX socket.\nUpgrade to version 11.8.5 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-39250", "package": "npm:matrix-js-sdk", "purl": "pkg:npm/matrix-js-sdk@12.5.0", "package_type": "npm", "package_usage": "N/A", "version": "12.5.0", "fix_version": "19.7.0", "severity": "HIGH", "cvss_score": "8.6", "short_description": "# matrix js sdk subject to user impersonation due to key/device identifier confusion in SAS verification\n## Impact\n\nAn attacker cooperating with a malicious homeserver could interfere with the verification flow between two users, injecting its own cross signing user identity in place of one of the users\u2019 identities, leading to the other device trusting/verifying the user identity under the control of the homeserver instead of the intended one.\n\nThe vulnerability is a bug in the matrix js sdk, caused by checking and signing user identities and devices in two separate steps, and inadequately fixing the keys to be signed between those steps.\n\nEven though the attack is partly made possible due to the design decision of treating cross signing user identities as Matrix devices on the server side (with their device ID set to the public part of the user identity key), no other examined implementations were vulnerable.\n\n## Patches\n\nThe matrix js sdk has been modified to double check that the key signed is the one that was verified instead of just referencing the key by ID. An additional check has been made to report an error when one of the device ID matches a cross signing key.\n\n## Workarounds\n\nAs this attack requires coordination between a malicious homeserver and an attacker\t\tif you trust your homeserver no particular workaround is needed. \n\nAs a potential way of detecting compromise, it\u2019s possible to review your device list or the device list of other users for devices with IDs in the form of a base64 cross signing key (`5XaczGNlfz0bl8R1IX5qn+tBoue2tWJqLMh+SDUuvCk`) instead of classical device ID (`SEHACYDHMG`).\n\n## References\nBlog post: https://matrix.org/blog/2022/09/28/upgrade now to address encryption vulns in matrix sdks and clients\n\n## For more information\nIf you have any questions or comments about this advisory, e mail us at security@matrix.org\n\nUpgrade to version 19.7.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-39251", "package": "npm:matrix-js-sdk", "purl": "pkg:npm/matrix-js-sdk@12.5.0", "package_type": "npm", "package_usage": "N/A", "version": "12.5.0", "fix_version": "19.7.0", "severity": "HIGH", "cvss_score": "8.6", "short_description": "# matrix js sdk subject to user spoofing via Olm/Megolm protocol confusion\n### Impact\n\nAn attacker cooperating with a malicious homeserver can construct messages that legitimately appear to have come from another person, without any indication such as a grey shield.\n\nAdditionally, a sophisticated attacker cooperating with a malicious homeserver could employ this vulnerability to perform a targeted attack in order to send fake to device messages appearing to originate from another user. This can allow, for example, to inject the key backup secret during a self verification, to make a targeted device start using a malicious key backup spoofed by the homeserver.\n\nThese attacks are possible due to a protocol confusion vulnerability that accepts to device messages encrypted with Megolm instead of Olm.\n\n### Patches\n\nmatrix js sdk has been modified to only accept Olm encrypted to device messages.\n\nOut of caution, several other checks have been audited or added:\n\tCleartext `m.room_key`, `m.forwarded_room_key` and `m.secret.send` to_device messages are discarded.\n\tSecrets received from untrusted devices are discarded.\n\tKey backups are only usable if they have a valid signature from a trusted device (no more local trust, or trust on decrypt).\n\tThe origin of a to device message should only be determined by observing the Olm session which managed to decrypt the message, and not by using claimed sender_key, user_id, or any other fields controllable by the homeserver.\n\n### Workarounds\n\nAs this attack requires coordination between a malicious home server and an attacker, if you trust your home server no particular workaround is needed. Notice that the backup spoofing attack is a particularly sophisticated targeted attack.\n\nWe are not aware of this attack being used in the wild, though specifying a false positive free way of noticing malicious key backups key is challenging.\n\nAs an abundance of caution, to avoid malicious backup attacks, you should not verify your new logins using emoji/QR verifications methods until patched. Prefer verifying with your security passphrase instead.\n\n### References\nBlog post: https://matrix.org/blog/2022/09/28/upgrade now to address encryption vulns in matrix sdks and clients\n\n### For more information\nIf you have any questions or comments about this advisory, e mail us at [security@matrix.org (mailto:security@matrix.org).\n\nUpgrade to version 19.7.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-39249", "package": "npm:matrix-js-sdk", "purl": "pkg:npm/matrix-js-sdk@12.5.0", "package_type": "npm", "package_usage": "N/A", "version": "12.5.0", "fix_version": "19.7.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# matrix js sdk subject to impersonated messages due to permissive key forwarding\n## Impact\n\nAn attacker cooperating with a malicious homeserver can construct messages appearing to have come from another person. Such messages will be marked with a grey shield on some platforms, but this may be missing in others.\n\nThis attack is possible due to the matrix js sdk implementing a too permissive [key forwarding (https://spec.matrix.org/v1.3/client server api/#key requests) strategy on the receiving end.\n\nKey forwarding is a mechanism allowing clients to recover from \u201cunable to decrypt\u201d messages when they missed the initial key distribution, at the time the message was originally sent. Examples include accessing message history before they joined the room but also when some network/federation errors have occurred.\n\n## Patches\n\nThe default policy for accepting key forwards has been made more strict in the matrix js sdk. matrix js sdk will now only accept forwarded keys in response to previously issued requests and only from own, verified devices.\n\nA unique exception to this rule is with the experimental [MSC3061 (https://github.com/matrix org/matrix spec proposals/pull/3061), that is forwarding room keys for past messages when invited in a room configured with the proper history visibility setting. Such key forwards are parked upon receipt and are only accepted if the SDK receives an invitation for that room from the inviter in a limited time window.\n\nThe SDK now sets a `trusted` flag on the decrypted message upon decryption, based on whether the key used to decrypt the message was received from a trusted source. Clients need to ensure that messages decrypted with a key with `trusted = false` are decorated appropriately (for example, by showing a warning for such messages).\n\n### Workarounds\n\nAs this attack requires coordination between a malicious homeserver and an attacker, if you trust your homeserver, no particular workaround is needed.\n\n## References\nBlog post: https://matrix.org/blog/2022/09/28/upgrade now to address encryption vulns in matrix sdks and clients\n\n## For more information\nIf you have any questions or comments about this advisory, e mail us at security@matrix.org.\nUpgrade to version 19.7.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2017-18924", "package": "npm:oauth2-server", "purl": "pkg:npm/oauth2-server@2.4.1", "package_type": "npm", "package_usage": "N/A", "version": "2.4.1", "fix_version": null, "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Code Injection in oauth2 server\n\"oauth2 server (aka node oauth2 server) through 3.1.1 implements OAuth 2.0 without PKCE. It does not prevent authorization code injection. This is similar to CVE 2020 7692. NOTE: the vendor states 'As RFC7636 is an extension, I think the claim in the Readme of \"RFC 6749 compliant\" is valid and not misleading and I also therefore wouldn't describe this as a \"vulnerability\" with the library per se.'\"\nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "NPM-1090859", "package": "npm:base64-url", "purl": "pkg:npm/base64-url@1.2.1", "package_type": "npm", "package_usage": "N/A", "version": "1.2.1", "fix_version": "2.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Out of bounds Read in base64 url\nVersions of `base64 url` before 2.0.0 are vulnerable to out of bounds read as it allocates uninitialized Buffers when number is passed in input.\n\n\n## Recommendation\n\nUpdate to version 2.0.0 or later.\nUpgrade to version 2.0.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-36059", "package": "npm:matrix-js-sdk", "purl": "pkg:npm/matrix-js-sdk@12.5.0", "package_type": "npm", "package_usage": "N/A", "version": "12.5.0", "fix_version": "19.4.0", "severity": "HIGH", "cvss_score": "7.2", "short_description": "# matrix js sdk Prototype Pollution vulnerability\n### Impact\nEvents sent with special strings in key places can temporarily disrupt or impede the matrix js sdk from functioning properly, potentially impacting the consumer's ability to process data safely. Note that the matrix js sdk can appear to be operating normally but be excluding or corrupting runtime data presented to the consumer.\n\n### Patches\nThis is fixed in matrix js sdk 19.4.0.\n\n### Workarounds\nRedacting applicable events, waiting for the sync processor to store data, and restarting the client can often fix it. Alternatively, redacting the applicable events and clearing all storage will often fix most perceived issues.\n\nIn some cases, no workarounds are possible.\n\n### References\nhttps://learn.snyk.io/lessons/prototype pollution/javascript/\n\n### For more information\nIf you have any questions or comments about this advisory please email us at [security at matrix.org (mailto:security@matrix.org).\n\nUpgrade to version 19.4.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-29529", "package": "npm:matrix-js-sdk", "purl": "pkg:npm/matrix-js-sdk@12.5.0", "package_type": "npm", "package_usage": "N/A", "version": "12.5.0", "fix_version": "24.1.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# matrix js sdk vulnerable to invisible eavesdropping in group calls\n### Impact\n\nAn attacker present in a room where an [MSC3401 (https://github.com/matrix org/matrix spec proposals/pull/3401) group call is taking place can eavesdrop on the video and audio of participants using matrix js sdk, without their knowledge. To affected matrix js sdk users, the attacker will not appear to be participating in the call.\n\nThis attack is possible because matrix js sdk's group call implementation accepts incoming direct calls from other users, even if they have not yet declared intent to participate in the group call, as a means of resolving a race condition in call setup. Affected versions do not restrict access to the user's outbound media in this case.\n\nLegacy 1:1 calls are unaffected.\n\n### Workarounds\n\nUsers may hold group calls in private rooms where only the exact users who are expected to participate in the call are present.\nUpgrade to version 24.1.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-28427", "package": "npm:matrix-js-sdk", "purl": "pkg:npm/matrix-js-sdk@12.5.0", "package_type": "npm", "package_usage": "N/A", "version": "12.5.0", "fix_version": "24.1.0", "severity": "HIGH", "cvss_score": "8.2", "short_description": "# Prototype pollution in matrix js sdk (part 2)\n### Impact\n\nIn certain configurations, data sent by remote servers containing special strings in key locations could cause modifications of the `Object.prototype`, disrupting matrix js sdk functionality, causing denial of service and potentially affecting program logic.\n\n(This is part 2, where [CVE 2022 36059 (https://cve.mitre.org/cgi bin/cvename.cgi?name=CVE 2022 36059) / [GHSA rfv9 x7hh xc32 (https://github.com/matrix org/matrix js sdk/security/advisories/GHSA rfv9 x7hh xc32) is part 1. Part 2 covers remaining vectors not covered by part 1, found in a codebase audit scheduled after part 1.)\n\n### Patches\nThe issue has been patched in matrix js sdk 24.0.0.\n\n### Workarounds\nNone.\n\n### References\n\n\t[Release blog post (https://matrix.org/blog/2023/03/28/security releases matrix js sdk 24 0 0 and matrix react sdk 3 69 0)\n\tThe advisory [GHSA rfv9 x7hh xc32 (https://github.com/matrix org/matrix js sdk/security/advisories/GHSA rfv9 x7hh xc32) ([CVE 2022 36059 (https://cve.mitre.org/cgi bin/cvename.cgi?name=CVE 2022 36059)) refers to an initial set of vulnerable locations discovered and patched in matrix js sdk 19.4.0. We opted not to disclose that advisory while we performed an audit of the codebase and are now disclosing it jointly with this one.\n\n### For more information\nIf you have any questions or comments about this advisory please email us at [security at matrix.org (mailto:security@matrix.org).\n\nUpgrade to version 24.0.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-23395", "package": "npm:nedb", "purl": "pkg:npm/nedb@1.8.0", "package_type": "npm", "package_usage": "N/A", "version": "1.8.0", "fix_version": null, "severity": "HIGH", "cvss_score": "7.3", "short_description": "# Prototype Pollution in nedb\nThis affects all versions of package nedb. The library could be tricked into adding or modifying properties of Object.prototype using a __proto__ or constructor.prototype payload.\nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2019-5413", "package": "npm:morgan", "purl": "pkg:npm/morgan@1.10.0", "package_type": "npm", "package_usage": "N/A", "version": "1.10.0", "fix_version": "1.9.1", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Code Injection in morgan\nVerisons of `morgan` before 1.9.1 are vulnerable to code injection when user input is allowed into the filter or combined with a prototype pollution attack.\n\n\n## Recommendation\n\nUpdate to version 1.9.1 or later.\nUpgrade to version 1.9.1 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-28500", "package": "npm:lodash.trim", "purl": "pkg:npm/lodash.trim@4.5.1", "package_type": "npm", "package_usage": "N/A", "version": "4.5.1", "fix_version": null, "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Regular Expression Denial of Service (ReDoS) in lodash\nAll versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `toNumber`, `trim` and `trimEnd` functions. \n\nSteps to reproduce (provided by reporter Liyuan Chen):\n```js\nvar lo = require('lodash');\n\nfunction build_blank(n) {\n\t\tvar ret = \"1\"\n\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tret += \" \"\n\t\t}\n\t\treturn ret + \"1\";\n}\nvar s = build_blank(50000) var time0 = Date.now();\nlo.trim(s) \nvar time_cost0 = Date.now()\t time0;\nconsole.log(\"time_cost0: \" + time_cost0);\nvar time1 = Date.now();\nlo.toNumber(s) var time_cost1 = Date.now()\t time1;\nconsole.log(\"time_cost1: \" + time_cost1);\nvar time2 = Date.now();\nlo.trimEnd(s);\nvar time_cost2 = Date.now()\t time2;\nconsole.log(\"time_cost2: \" + time_cost2);\n```\nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-37466", "package": "npm:vm2", "purl": "pkg:npm/vm2@3.9.19", "package_type": "npm", "package_usage": "N/A", "version": "3.9.19", "fix_version": null, "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# vm2 Sandbox Escape vulnerability\nIn vm2 for versions up to 3.9.19, `Promise` handler sanitization can be bypassed, allowing attackers to escape the sandbox and run arbitrary code.\n\n### Impact\nRemote Code Execution, assuming the attacker has arbitrary code execution primitive inside the context of vm2 sandbox.\n\n### Patches\nNone.\n\n### Workarounds\nNone.\n\n### References\nPoC\t https://gist.github.com/leesh3288/f693061e6523c97274ad5298eb2c74e9\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n\tOpen an issue in [VM2 (https://github.com/patriksimek/vm2)\n\nThanks to [Xion (https://twitter.com/0x10n) (SeungHyun Lee) of [KAIST Hacking Lab (https://kaist hacking.github.io/) for disclosing this vulnerability.\nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-37903", "package": "npm:vm2", "purl": "pkg:npm/vm2@3.9.19", "package_type": "npm", "package_usage": "N/A", "version": "3.9.19", "fix_version": null, "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# vm2 Sandbox Escape vulnerability\nIn vm2 for versions up to 3.9.19, Node.js custom inspect function allows attackers to escape the sandbox and run arbitrary code.\n\n### Impact\nRemote Code Execution, assuming the attacker has arbitrary code execution primitive inside the context of vm2 sandbox.\n\n### Patches\nNone.\n\n### Workarounds\nNone.\n\n### References\nPoC is to be disclosed on or after the 5th of September.\n\n### Similarity with [CVE 2023 37466 (https://nvd.nist.gov/vuln/detail/CVE 2023 37466)\nWhile this advisory might look similar to [CVE 2023 37466 (https://nvd.nist.gov/vuln/detail/CVE 2023 37466), it is a completely different way of escaping the sandbox.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n\tOpen an issue in [VM2 (https://github.com/patriksimek/vm2)\n\nThanks to [Xion (https://twitter.com/0x10n) (SeungHyun Lee) of [KAIST Hacking Lab (https://kaist hacking.github.io/) for disclosing this vulnerability.\nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-23358", "package": "npm:underscore", "purl": "pkg:npm/underscore@1.13.1", "package_type": "npm", "package_usage": "N/A", "version": "1.13.1", "fix_version": "1.12.1", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Arbitrary Code Execution in underscore\nThe package `underscore` from 1.13.0 0 and before 1.13.0 2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Execution via the template function, particularly when a variable property is passed as an argument as it is not sanitized.\nUpgrade to version 1.12.1 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-26159", "package": "npm:follow-redirects", "purl": "pkg:npm/follow-redirects@1.15.2", "package_type": "npm", "package_usage": "N/A", "version": "1.15.2", "fix_version": "1.15.6", "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "# Follow Redirects improperly handles URLs in the url.parse() function\nVersions of the package follow redirects before 1.15.4 are vulnerable to Improper Input Validation due to the improper handling of URLs by the url.parse() function. When new URL() throws an error, it can be manipulated to misinterpret the hostname. An attacker could exploit this weakness to redirect traffic to a malicious site, potentially leading to information disclosure, phishing attacks, or other security breaches.\nUpgrade to version 1.15.4 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-46233", "package": "npm:crypto-js", "purl": "pkg:npm/crypto-js@4.1.1", "package_type": "npm", "package_usage": "N/A", "version": "4.1.1", "fix_version": "4.2.0", "severity": "CRITICAL", "cvss_score": "9.1", "short_description": "# crypto js PBKDF2 1,000 times weaker than specified in 1993 and 1.3M times weaker than current standard\n### Impact\n#### Summary\nCrypto js PBKDF2 is 1,000 times weaker than originally specified in 1993, and [at least 1,300,000 times weaker than current industry standard [OWASP PBKDF2 Cheatsheet . This is because it both (1) defaults to [SHA1 [SHA1 wiki , a cryptographic hash algorithm considered insecure [since at least 2005 [Cryptanalysis of SHA 1\tand (2) defaults to [one single iteration [one iteration src , a 'strength' or 'difficulty' value specified at 1,000 when specified in 1993. PBKDF2 relies on iteration count as a countermeasure to [preimage [preimage attack\tand [collision [collision attack\tattacks.\n\nPotential Impact:\n\n1. If used to protect passwords, the impact is high.\n2. If used to generate signatures, the impact is high.\n\nProbability / risk analysis / attack enumeration:\n\n1. [For at most $45,000 [SHA1 is a Shambles , an attacker, given control of only the beginning of a crypto js PBKDF2 input, can create a value which has _identical cryptographic signature_ to any chosen known value.\n4. Due to the [length extension attack\ton SHA1, we can create a value that has identical signature to any _unknown_ value, provided it is prefixed by a known value. It does not matter if PBKDF2 applies '[salt [cryptographic salt ' or '[pepper [cryptographic pepper ' or any other secret unknown to the attacker. It will still create an identical signature.\n\nUpdate: PBKDF2 requires a pseudo random function that takes two inputs, so HMAC SHA1 is used rather than plain SHA1. HMAC is not affected by [length extension attacks [Length Extension attack . However, by defaulting to a single PBKDF2 iteration, the hashes do not benefit from the extra computational complexity that PBKDF2 is supposed to provide. The resulting hashes therefore have little protection against an offline brute force attack.\n \n[cryptographic salt : https://en.wikipedia.org/wiki/Salt_(cryptography) \"Salt (cryptography), Wikipedia\"\n[cryptographic pepper : https://en.wikipedia.org/wiki/Pepper_(cryptography) \"Pepper (cryptography), Wikipedia\"\n[SHA1 wiki : https://en.wikipedia.org/wiki/SHA 1 \"SHA 1, Wikipedia\"\n[Cryptanalysis of SHA 1 : https://www.schneier.com/blog/archives/2005/02/cryptanalysis_o.html \"Cryptanalysis of SHA 1\"\n[one iteration src : https://github.com/brix/crypto js/blob/1da3dabf93f0a0435c47627d6f171ad25f452012/src/pbkdf2.js#L22 L26 \"crypto js/src/pbkdf2.js lines 22 26\"\n[collision attack : https://en.wikipedia.org/wiki/Hash_collision \"Collision Attack, Wikipedia\"\n[preimage attack : https://en.wikipedia.org/wiki/Preimage_attack \"Preimage Attack, Wikipedia\"\n[SHA1 is a Shambles : https://eprint.iacr.org/2020/014.pdf \"SHA 1 is a Shambles: First Chosen Prefix Collision on SHA 1\nand Application to the PGP Web of Trust, Ga\u00ebtan Leurent and Thomas Peyrin\"\n[Length Extension attack : https://en.wikipedia.org/wiki/Length_extension_attack \"Length extension attack, Wikipedia\"\n\ncrypto js has 10,642 public users [as displayed on NPM [crypto js, NPM , today October 11th 2023. The number of transient dependents is likely several orders of magnitude higher.\n\nA very rough GitHub search[ shows 432 files [GitHub search: affected files\tcross GitHub using PBKDF2 in crypto js in Typescript or JavaScript, but not specifying any number of iterations.\n\n[OWASP PBKDF2 Cheatsheet : https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#pbkdf2 \"OWASP PBKDF2 Cheatsheet\"\n[crypto js, NPM : https://www.npmjs.com/package/crypto js \"crypto js on NPM\"\n[GitHub search: affected files : https://github.com/search?q=%22crypto js%22+AND+pbkdf2+AND+%28lang%3AJavaScript+OR+lang%3ATypeScript%29++NOT+%22iterations%22&type=code&p=2 \"GitHub search: crypto js AND pbkdf2 AND (lang:JavaScript OR lang:TypeScript)\tNOT iterations\"\n\n#### Affected versions\nAll versions are impacted. This code has been the same since crypto js was first created.\n\n#### Further Cryptanalysis\n\nThe issue here is especially egregious because the length extension attack makes useless any secret that might be appended to the plaintext before calculating its signature.\n\nConsider a scheme in which a secret is created for a user's username, and that secret is used to protect e.g. their passwords. Let's say that password is 'fake password', and their username is 'example username'.\n\nTo encrypt the user password via symmetric encryption we might do `encrypt(plaintext: 'fake password', encryption_key: cryptojs.pbkdf2(value: 'example username' + salt_or_pepper))`. By this means, we would, in theory, create an `encryption_key` that can be determined from the public username, but which requires the secret `salt_or_pepper` to generate. This is a common scheme for protecting passwords, as exemplified in bcrypt & scrypt. Because the encryption key is symmetric, we can use this derived key to also decrypt the ciphertext.\n\nBecause of the length extension issue, if the attacker obtains (via attack 1), a collision with 'example username', the attacker _does not need to know_ `salt_or_pepper` to decrypt their account data, only their public username.\n\n### Description\n\nPBKDF2 is a key derivation is a key derivation function that is used for two main purposes: (1) to stretch or squash a variable length password's entropy into a fixed size for consumption by another cryptographic operation and (2) to reduce the chance of downstream operations recovering the password input (for example, for password storage).\n\nUnlike the modern [webcrypto (https://w3c.github.io/webcrypto/#pbkdf2 operations) standard, crypto js does not throw an error when a number of iterations is not specified, and defaults to one single iteration. In the year 2000, when PBKDF2 was originally specified, the minimum number of iterations suggested was set at 1,000. Today, [OWASP recommends 1,300,000 [OWASP PBKDF2 Cheatsheet :\n\nhttps://github.com/brix/crypto js/blob/4dcaa7afd08f48cd285463b8f9499cdb242605fa/src/pbkdf2.js#L22 L26\n\n### Patches\nNo available patch. The package is not maintained.\n\n### Workarounds\nConsult the [OWASP PBKDF2 Cheatsheet . Configure to use SHA256 with at least 250,000 iterations.\n\n### Coordinated disclosure\nThis issue was simultaneously submitted to [crypto js (https://github.com/brix/crypto js) and [crypto es (https://github.com/entronad/crypto es) on the 23rd of October 2023.\n\n### Caveats\n\nThis issue was found in a security review that was _not_ scoped to crypto js. This report is not an indication that crypto js has undergone a formal security assessment by the author.\n\n\nUpgrade to version 4.2.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "NPM-1096366", "package": "npm:nodemailer", "purl": "pkg:npm/nodemailer@6.6.3", "package_type": "npm", "package_usage": "N/A", "version": "6.6.3", "fix_version": "6.9.9", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# nodemailer ReDoS when trying to send a specially crafted email\n### Summary\nA ReDoS vulnerability occurs when nodemailer tries to parse img files with the parameter `attachDataUrls` set, causing the stuck of event loop. \nAnother flaw was found when nodemailer tries to parse an attachments with a embedded file, causing the stuck of event loop. \n\n### Details\n\nRegex: / data:((?:[ ; *;)*(?:[ , *)),(.*)$/\n\nPath: compile\t> getAttachments\t> _processDataUrl\n\nRegex: /(<img b[ > * src s*=[ s\"' *)(data:([ ; +);[ \"'> s +)/\n\nPath: _convertDataImages\n\n### PoC\n\nhttps://gist.github.com/francoatmega/890dd5053375333e40c6fdbcc8c58df6\nhttps://gist.github.com/francoatmega/9aab042b0b24968d7b7039818e8b2698\n\n### Impact\n\nReDoS causes the event loop to stuck a specially crafted evil email can cause this problem.\n\nUpgrade to version 6.9.9 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-36604", "package": "npm:hoek", "purl": "pkg:npm/hoek@6.1.3", "package_type": "npm", "package_usage": "N/A", "version": "6.1.3", "fix_version": null, "severity": "HIGH", "cvss_score": "8.1", "short_description": "# hoek subject to prototype pollution via the clone function.\nhoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the __proto__ key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. \nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-24999", "package": "npm:qs", "purl": "pkg:npm/qs@0.6.6", "package_type": "npm", "package_usage": "N/A", "version": "0.6.6", "fix_version": "6.2.4", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# qs vulnerable to Prototype Pollution\nqs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__ =b&a[__proto__ &a[length =100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.\nUpgrade to version 6.7.3 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-21484", "package": "npm:jsrsasign", "purl": "pkg:npm/jsrsasign@10.5.25", "package_type": "npm", "package_usage": "N/A", "version": "10.5.25", "fix_version": "11.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Marvin Attack of RSA and RSAOAEP decryption in jsrsasign\n### Impact\nRSA PKCS#1.5 or RSAOAEP ciphertexts may be decrypted by this Marvin attack vulnerability.\n\n### Patches\nupdate to jsrsasign 11.0.0.\n\n### Workarounds\nFind and replace RSA and RSAOAEP decryption with other crypto library.\n\n### References\nhttps://people.redhat.com/~hkario/marvin/\nhttps://github.com/kjur/jsrsasign/issues/598\nhttps://security.snyk.io/vuln/SNYK JAVA ORGWEBJARSNPM 6070732\nhttps://cve.mitre.org/cgi bin/cvename.cgi?name=CVE 2024 21484\nUpgrade to version 11.0.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-46234", "package": "npm:browserify-sign", "purl": "pkg:npm/browserify-sign@4.2.1", "package_type": "npm", "package_usage": "N/A", "version": "4.2.1", "fix_version": "4.2.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# browserify sign upper bound check issue in `dsaVerify` leads to a signature forgery attack\n### Summary\nAn upper bound check issue in `dsaVerify` function allows an attacker to construct signatures that can be successfully verified by any public key, thus leading to a signature forgery attack.\n\n### Details\nIn `dsaVerify` function, it checks whether the value of the signature is legal by calling function `checkValue`, namely, whether `r` and `s` are both in the interval `[1, q\t 1 `. However, the second line of the `checkValue` function wrongly checks the upper bound of the passed parameters, since the value of `b.cmp(q)` can only be `0`, `1` and ` 1`, and it can never be greater than `q`. \n\nIn this way, although the values of `s` cannot be `0`, an attacker can achieve the same effect as zero by setting its value to `q`, and then send `(r, s) = (1, q)` to pass the verification of any public key.\n\n### Impact\nAll places in this project that involve DSA verification of user input signatures will be affected by this vulnerability.\n\n\n### Fix PR:\nSince the temporary private fork was deleted, here's a webarchive of the PR discussion and diff pages: [PR webarchive.zip (https://github.com/browserify/browserify sign/files/13172957/PR.webarchive.zip)\n\nUpgrade to version 4.2.2 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-28155", "package": "npm:request", "purl": "pkg:npm/request@2.88.2", "package_type": "npm", "package_usage": "N/A", "version": "2.88.2", "fix_version": null, "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "# Server Side Request Forgery in Request\nThe `request` package through 2.88.2 for Node.js and the `@cypress/request` package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker controller server that does a cross protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\n\nNOTE: The `request` package is no longer supported by the maintainer.\nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28246", "package": "npm:katex", "purl": "pkg:npm/katex@0.16.9", "package_type": "npm", "package_usage": "N/A", "version": "0.16.9", "fix_version": "0.16.10", "severity": "MEDIUM", "cvss_score": "5.5", "short_description": "# KaTeX missing normalization of the protocol in URLs allows bypassing forbidden protocols\n### Impact\n\nCode that uses KaTeX's `trust` option, specifically that provides a function to block list certain URL protocols, can be fooled by URLs in malicious inputs that use uppercase characters in the protocol. In particular, this can allow for malicious input to generate `javascript:` links in the output, even if the `trust` function tries to forbid this protocol via `trust: (context) => context.protocol !== 'javascript'`.\n\n### Patches\nUpgrade to KaTeX v0.16.10 to remove this vulnerability.\n\n### Workarounds\n* Allow list instead of block protocols in your `trust` function.\n* Manually lowercase `context.protocol` via `context.protocol.toLowerCase()` before attempting to check for certain protocols.\n* Avoid use of or turn off the `trust` option.\n\n\n### Details\nKaTeX did not normalize the `protocol` entry of the `context` object provided to a user specified `trust` function, so it could be a mix of lowercase and/or uppercase letters.\n\nIt is generally better to allow list by protocol, in which case this would normally not be an issue. But in some cases, you might want to block list, and the [KaTeX documentation (https://katex.org/docs/options.html) even provides such an example:\n\n> Allow all commands but forbid specific protocol: `trust: (context) => context.protocol !== 'file'`\n\nCurrently KaTeX internally sees `file:` and `File:` URLs as different protocols, so `context.protocol` can be `file` or `File`, so the above check does not suffice.\tA simple workaround would be:\n\n> `trust: (context) => context.protocol.toLowerCase() !== 'file'`\n\nMost URL parsers normalize the scheme to lowercase. For example, [RFC3986 (https://datatracker.ietf.org/doc/html/rfc3986#section 3.1) says:\n\n> Although schemes are case insensitive, the canonical form is lowercase and documents that specify schemes must do so with lowercase letters. An implementation should accept uppercase letters as equivalent to lowercase in scheme names (e.g., allow \"HTTP\" as well as \"http\") for the sake of robustness but should only produce lowercase scheme names for consistency.\n\nUpgrade to version 0.16.10 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28245", "package": "npm:katex", "purl": "pkg:npm/katex@0.16.9", "package_type": "npm", "package_usage": "N/A", "version": "0.16.9", "fix_version": "0.16.10", "severity": "MEDIUM", "cvss_score": "6.3", "short_description": "# KaTeX's ` includegraphics` does not escape filename\n### Impact\nKaTeX users who render untrusted mathematical expressions could encounter malicious input using ` includegraphics` that runs arbitrary JavaScript, or generate invalid HTML.\n\n### Patches\nUpgrade to KaTeX v0.16.10 to remove this vulnerability.\n\n### Workarounds\n* Avoid use of or turn off the `trust` option, or set it to forbid ` includegraphics` commands.\n* Forbid inputs containing the substring `\"\tincludegraphics\"`.\n* Sanitize HTML output from KaTeX.\n\n### Details\n` includegraphics` did not properly quote its filename argument, allowing it to generate invalid or malicious HTML that runs scripts.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Open an issue or security advisory in the [KaTeX repository (https://github.com/KaTeX/KaTeX/)\n* Email us at katex security@mit.edu\nUpgrade to version 0.16.10 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28244", "package": "npm:katex", "purl": "pkg:npm/katex@0.16.9", "package_type": "npm", "package_usage": "N/A", "version": "0.16.9", "fix_version": "0.16.10", "severity": "MEDIUM", "cvss_score": "6.5", "short_description": "# KaTeX's maxExpand bypassed by Unicode sub/superscripts\n### Impact\nKaTeX users who render untrusted mathematical expressions could encounter malicious input using ` def` or ` newcommand` that causes a near infinite loop, despite setting `maxExpand` to avoid such loops. This can be used as an availability attack, where e.g. a client rendering another user's KaTeX input will be unable to use the site due to memory overflow, tying up the main thread, or stack overflow.\n\n### Patches\nUpgrade to KaTeX v0.16.10 to remove this vulnerability.\n\n### Workarounds\nForbid inputs containing any of the characters `\u208a\u208b\u208c\u208d\u208e\u2080\u2081\u2082\u2083\u2084\u2085\u2086\u2087\u2088\u2089\u2090\u2091\u2095\u1d62\u2c7c\u2096\u2097\u2098\u2099\u2092\u209a\u1d63\u209b\u209c\u1d64\u1d65\u2093\u1d66\u1d67\u1d68\u1d69\u1d6a\u207a\u207b\u207c\u207d\u207e\u2070\u00b9\u00b2\u00b3\u2074\u2075\u2076\u2077\u2078\u2079\u1d43\u1d47\u1d9c\u1d48\u1d49\u1d4d\u02b0\u2071\u02b2\u1d4f\u02e1\u1d50\u207f\u1d52\u1d56\u02b3\u02e2\u1d57\u1d58\u02b7\u02e3\u02b8\u1dbb\u1d5b\u1d5d\u1d5e\u1d5f\u1d60\u1d61` before passing them to KaTeX.\n(There is no easy workaround for the auto render extension.)\n\n### Details\nKaTeX supports an option named `maxExpand` which aims to prevent infinitely recursive macros from consuming all available memory and/or triggering a stack overflow error. Unfortunately, [support for \"Unicode (sub|super)script characters\" (https://github.com/KaTeX/KaTeX/commit/d8fc35e6a97f8e561c723b93ad275cf5a7f3094a) allows an attacker to bypass this limit. Each sub/superscript group instantiated a separate Parser with its own limit on macro executions, without inheriting the current count of macro executions from its parent. This has been corrected in KaTeX v0.16.10.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue or security advisory in the [KaTeX repository (https://github.com/KaTeX/KaTeX/)\n* Email us at [katex security@mit.edu (mailto:katex security@mit.edu)\nUpgrade to version 0.16.10 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28243", "package": "npm:katex", "purl": "pkg:npm/katex@0.16.9", "package_type": "npm", "package_usage": "N/A", "version": "0.16.9", "fix_version": "0.16.10", "severity": "MEDIUM", "cvss_score": "6.5", "short_description": "# KaTeX's maxExpand bypassed by ` edef`\n### Impact\nKaTeX users who render untrusted mathematical expressions could encounter malicious input using ` edef` that causes a near infinite loop, despite setting `maxExpand` to avoid such loops. This can be used as an availability attack, where e.g. a client rendering another user's KaTeX input will be unable to use the site due to memory overflow, tying up the main thread, or stack overflow.\n\n### Patches\nUpgrade to KaTeX v0.16.10 to remove this vulnerability.\n\n### Workarounds\nForbid inputs containing the substring `\"\tedef\"` before passing them to KaTeX.\n(There is no easy workaround for the auto render extension.)\n\n### Details\nKaTeX supports an option named `maxExpand` which prevents infinitely recursive macros from consuming all available memory and/or triggering a stack overflow error. However, what counted as an \"expansion\" is a single macro expanding to any number of tokens. The expand and define TeX command ` edef` can be used to build up an exponential number of tokens using only a linear number of expansions according to this definition, e.g. by repeatedly doubling the previous definition. This has been corrected in KaTeX v0.16.10, where every expanded token in an ` edef` counts as an expansion.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue or security advisory in the [KaTeX repository (https://github.com/KaTeX/KaTeX/)\n* Email us at [katex security@mit.edu (mailto:katex security@mit.edu)\nUpgrade to version 0.16.10 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-29041", "package": "npm:express", "purl": "pkg:npm/express@4.13.3", "package_type": "npm", "package_usage": "N/A", "version": "4.13.3", "fix_version": "4.19.2", "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "# Express.js Open Redirect in malformed URLs\n### Impact\n\nVersions of Express.js prior to 4.19.2 and pre release alpha and beta versions before 5.0.0 beta.3 are affected by an open redirect vulnerability using malformed URLs.\n\nWhen a user of Express performs a redirect using a user provided URL Express performs an encode [using `encodeurl` (https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list.\n\nThe main method impacted is `res.location()` but this is also called from within `res.redirect()`.\n\n### Patches\n\nhttps://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd\nhttps://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94\n\nAn initial fix went out with `express@4.19.0`, we then patched a feature regression in `4.19.1` and added improved handling for the bypass in `4.19.2`.\n\n### Workarounds\n\nThe fix for this involves pre parsing the url string with either `require('node:url').parse` or `new URL`. These are steps you can take on your own before passing the user input string to `res.location` or `res.redirect`.\n\n### References\n\nhttps://github.com/expressjs/express/pull/5539\nhttps://github.com/koajs/koa/issues/1800\nhttps://expressjs.com/en/4x/api.html#res.location\nUpgrade to version 4.19.2 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28176", "package": "npm:jose", "purl": "pkg:npm/jose@4.14.6", "package_type": "npm", "package_usage": "N/A", "version": "4.14.6", "fix_version": "4.15.5", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# jose vulnerable to resource exhaustion via specifically crafted JWE with compressed plaintext\nA vulnerability has been identified in the JSON Web Encryption (JWE) decryption interfaces, specifically related to the [support for decompressing plaintext after its decryption (https://www.rfc editor.org/rfc/rfc7516.html#section 4.1.3). This allows an adversary to exploit specific scenarios where the compression ratio becomes exceptionally high. As a result, the length of the JWE token, which is determined by the compressed content's size, can land below application defined limits. In such cases, other existing application level mechanisms for preventing resource exhaustion may be rendered ineffective.\n\nNote that as per [RFC 8725 (https://www.rfc editor.org/rfc/rfc8725.html#name avoid compression of encryp) compression of data SHOULD NOT be done before encryption, because such compressed data often reveals information about the plaintext. For this reason the v5.x major version of `jose` removed support for compressed payloads entirely and is therefore NOT affected by this advisory.\n\n### Impact\n\nUnder certain conditions it is possible to have the user's environment consume unreasonable amount of CPU time or memory during JWE Decryption operations.\n\n### Affected users\n\nThe impact is limited only to Node.js users utilizing the JWE decryption APIs to decrypt JWEs from untrusted sources.\n\nYou are NOT affected if any of the following applies to you\n\n\tYour code uses jose version v5.x where JWE Compression is not supported anymore\n\tYour code runs in an environment other than Node.js (e.g. Deno, CF Workers), which is the only runtime where JWE Compression is implemented out of the box\n\tYour code does not use the JWE decryption APIs\n\tYour code only accepts JWEs produced by trusted sources\n\n### Patches\n\n`v2.0.7` and `v4.15.5` releases limit the decompression routine to only allow decompressing up to 250 kB of plaintext. In v4.x it is possible to further adjust this limit via the `inflateRaw` decryption option implementation. In v2.x it is possible to further adjust this limit via the `inflateRawSyncLimit` decryption option.\n\n### Workarounds\n\nIf you cannot upgrade and do not want to support compressed JWEs you may detect and reject these tokens early by checking the token's protected header\n\n```js\nconst { zip } = jose.decodeProtectedHeader(token)\nif (zip !== undefined) {\n\tthrow new Error('JWE Compression is not supported')\n}\n```\n\nIf you wish to continue supporting JWEs with compressed payloads in these legacy release lines you must upgrade (v1.x and v2.x to version v2.0.7, v3.x and v4.x to version v4.15.5) and review the limits put forth by the patched releases.\n\n### For more information\nIf you have any questions or comments about this advisory please open a discussion in the project's [repository (https://github.com/panva/jose/discussions/new?category=q a&title=GHSA hhhv q57g 882q%20advisory%20question)\nUpgrade to version 4.15.5 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28849", "package": "npm:follow-redirects", "purl": "pkg:npm/follow-redirects@1.15.2", "package_type": "npm", "package_usage": "N/A", "version": "1.15.2", "fix_version": "1.15.6", "severity": "MEDIUM", "cvss_score": "6.5", "short_description": "# follow redirects' Proxy Authorization header kept across hosts\nWhen using [axios (https://github.com/axios/axios), its dependency follow redirects only clears authorization header during cross domain redirect, but allows the proxy authentication header which contains credentials too.\n\n## Steps To Reproduce & PoC\n\nTest code:\n\n```js\nconst axios = require('axios');\n\naxios.get('http://127.0.0.1:10081/', {\n headers: {\n 'AuThorization': 'Rear Test',\n 'ProXy AuthoriZation': 'Rear Test',\n 'coOkie': 't=1'\n }\n})\n .then((response) => {\n console.log(response);\n })\n```\n\nWhen I meet the cross domain redirect, the sensitive headers like authorization and cookie are cleared, but proxy authentication header is kept.\n\n## Impact\n\nThis vulnerability may lead to credentials leak.\n\n## Recommendations\n\nRemove proxy authentication header during cross domain redirect\n\n### Recommended Patch\n\n[follow redirects/index.js:464 (https://github.com/follow redirects/follow redirects/commit/c4f847f85176991f95ab9c88af63b1294de8649b)\n\n```diff\n\tremoveMatchingHeaders(/ (?:authorization|cookie)$/i, this._options.headers);\n+ removeMatchingHeaders(/ (?:authorization|proxy authorization|cookie)$/i, this._options.headers);\n```\nUpgrade to version 1.15.6 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28863", "package": "npm:tar", "purl": "pkg:npm/tar@4.4.19", "package_type": "npm", "package_usage": "N/A", "version": "4.4.19", "fix_version": "6.2.1", "severity": "MEDIUM", "cvss_score": "6.5", "short_description": "# Denial of service while parsing a tar file due to lack of folders count validation\n## Description: \nDuring some analysis today on npm's `node tar` package I came across the folder creation process, Basicly if you provide node tar with a path like this `./a/b/c/foo.txt` it would create every folder and sub folder here a, b and c until it reaches the last folder to create `foo.txt`, In this case I noticed that there's no validation at all on the amount of folders being created, that said we're actually able to CPU and memory consume the system running node tar and even crash the nodejs client within few seconds of running it using a path with too many sub folders inside\n\n## Steps To Reproduce:\nYou can reproduce this issue by downloading the tar file I provided in the resources and using node tar to extract it, you should get the same behavior as the video\n\n## Proof Of Concept:\nHere's a [video (https://hackerone us west 2 production attachments.s3.us west 2.amazonaws.com/3i7uojw8s52psar6pg8zkdo4h9io?response content disposition=attachment%3B%20filename%3D%22tar dos poc.webm%22%3B%20filename%2A%3DUTF 8%27%27tar dos poc.webm&response content type=video%2Fwebm&X Amz Algorithm=AWS4 HMAC SHA256&X Amz Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus west 2%2Fs3%2Faws4_request&X Amz Date=20240312T080103Z&X Amz Expires=3600&X Amz Security Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X Amz SignedHeaders=host&X Amz Signature=1e8235d885f1d61529b7d6b23ea3a0780c300c91d86e925dd8310d5b661ddbe2) show casing the exploit: \n\n## Impact\n\nDenial of service by crashing the nodejs client when attempting to parse a tar archive, make it run out of heap memory and consuming server CPU and memory resources\n\n## Report resources\n[payload.txt (https://hackerone us west 2 production attachments.s3.us west 2.amazonaws.com/1e83ayb5dd3350fvj3gst0mqixwk?response content disposition=attachment%3B%20filename%3D%22payload.txt%22%3B%20filename%2A%3DUTF 8%27%27payload.txt&response content type=text%2Fplain&X Amz Algorithm=AWS4 HMAC SHA256&X Amz Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus west 2%2Fs3%2Faws4_request&X Amz Date=20240312T080103Z&X Amz Expires=3600&X Amz Security Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X Amz SignedHeaders=host&X Amz Signature=bad9fe731f05a63a950f99828125653a8c1254750fe0ca7be882e89ecdd449ae)\n[archeive.tar.gz (https://hackerone us west 2 production attachments.s3.us west 2.amazonaws.com/ymkuh4xnfdcf1soeyi7jc2x4yt2i?response content disposition=attachment%3B%20filename%3D%22archive.tar.gz%22%3B%20filename%2A%3DUTF 8%27%27archive.tar.gz&response content type=application%2Fx tar&X Amz Algorithm=AWS4 HMAC SHA256&X Amz Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus west 2%2Fs3%2Faws4_request&X Amz Date=20240312T080103Z&X Amz Expires=3600&X Amz Security Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X Amz SignedHeaders=host&X Amz Signature=5e2c0d4b4de40373ac0fe91908c2659141a6dd4ab850271cc26042a3885c82ea)\n\n## Note\nThis report was originally reported to GitHub bug bounty program, they asked me to report it to you a month ago\nUpgrade to version 6.2.1 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-4367", "package": "npm:pdfjs-dist", "purl": "pkg:npm/pdfjs-dist@2.14.305", "package_type": "npm", "package_usage": "N/A", "version": "2.14.305", "fix_version": "4.2.67", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# PDF.js vulnerable to arbitrary JavaScript execution upon opening a malicious PDF\n### Impact\nIf pdf.js is used to load a malicious PDF, and PDF.js is configured with `isEvalSupported` set to `true` (which is the default value), unrestricted attacker controlled JavaScript will be executed in the context of the hosting domain.\n\n### Patches\nThe patch removes the use of `eval`:\nhttps://github.com/mozilla/pdf.js/pull/18015\n\n### Workarounds\nSet the option `isEvalSupported` to `false`. \n\n### References\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1893645\nUpgrade to version 4.2.67 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-45857", "package": "npm:axios", "purl": "pkg:npm/axios@0.21.4", "package_type": "npm", "package_usage": "N/A", "version": "0.21.4", "fix_version": "0.28.0", "severity": "MEDIUM", "cvss_score": "6.5", "short_description": "# Axios Cross Site Request Forgery Vulnerability\nAn issue discovered in Axios 0.8.1 through 1.5.1 inadvertently reveals the confidential XSRF TOKEN stored in cookies by including it in the HTTP header X XSRF TOKEN for every request made to any host allowing attackers to view sensitive information.\nUpgrade to version 0.28.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-26115", "package": "npm:word-wrap", "purl": "pkg:npm/word-wrap@1.2.3", "package_type": "npm", "package_usage": "N/A", "version": "1.2.3", "fix_version": "1.2.4", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# word wrap vulnerable to Regular Expression Denial of Service\nAll versions of the package word wrap are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the result variable.\n\nUpgrade to version 1.2.4 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-26136", "package": "npm:tough-cookie", "purl": "pkg:npm/tough-cookie@2.5.0", "package_type": "npm", "package_usage": "N/A", "version": "2.5.0", "fix_version": "4.1.3", "severity": "MEDIUM", "cvss_score": "6.5", "short_description": "# tough cookie Prototype Pollution vulnerability\nVersions of the package tough cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. This issue arises from the manner in which the objects are initialized.\nUpgrade to version 4.1.3 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-42282", "package": "npm:ip", "purl": "pkg:npm/ip@1.1.5", "package_type": "npm", "package_usage": "N/A", "version": "1.1.5", "fix_version": "2.0.1", "severity": "LOW", "cvss_score": "2.0", "short_description": "# NPM IP package incorrectly identifies some private IP addresses as public\nThe `isPublic()` function in the NPM package `ip` doesn't correctly identify certain private IP addresses in uncommon formats such as `0x7F.1` as private. Instead, it reports them as public by returning `true`. This can lead to security issues such as Server Side Request Forgery (SSRF) if `isPublic()` is used to protect sensitive code paths when passed user input. Versions 1.1.9 and 2.0.1 fix the issue.\nUpgrade to version 2.0.1 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-4068", "package": "npm:braces", "purl": "pkg:npm/braces@3.0.2", "package_type": "npm", "package_usage": "N/A", "version": "3.0.2", "fix_version": "3.0.3", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Uncontrolled resource consumption in braces\nThe NPM package `braces` fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.\n\nUpgrade to version 3.0.3 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-37890", "package": "npm:ws", "purl": "pkg:npm/ws@5.2.3", "package_type": "npm", "package_usage": "N/A", "version": "5.2.3", "fix_version": "8.17.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# ws affected by a DoS when handling a request with many HTTP headers\n### Impact\n\nA request with a number of headers exceeding the[`server.maxHeadersCount` [\tthreshold could be used to crash a ws server.\n\n### Proof of concept\n\n```js\nconst http = require('http');\nconst WebSocket = require('ws');\n\nconst wss = new WebSocket.Server({ port: 0 }, function () {\n\tconst chars = \"!#$%&'*+ .0123456789abcdefghijklmnopqrstuvwxyz _`|~\".split('');\n\tconst headers = {};\n\tlet count = 0;\n\n\tfor (let i = 0; i < chars.length; i++) {\n\t\tif (count === 2000) break;\n\n\t\tfor (let j = 0; j < chars.length; j++) {\n\t\t\tconst key = chars[i\t+ chars[j ;\n\t\t\theaders[key\t= 'x';\n\n\t\t\tif (++count === 2000) break;\n\t\t}\n\t}\n\n\theaders.Connection = 'Upgrade';\n\theaders.Upgrade = 'websocket';\n\theaders['Sec WebSocket Key'\t= 'dGhlIHNhbXBsZSBub25jZQ==';\n\theaders['Sec WebSocket Version'\t= '13';\n\n\tconst request = http.request({\n\t\theaders: headers,\n\t\thost: '127.0.0.1',\n\t\tport: wss.address().port\n\t});\n\n\trequest.end();\n});\n```\n\n### Patches\n\nThe vulnerability was fixed in ws@8.17.1 (https://github.com/websockets/ws/commit/e55e5106f10fcbaac37cfa89759e4cc0d073a52c) and backported to ws@7.5.10 (https://github.com/websockets/ws/commit/22c28763234aa75a7e1b76f5c01c181260d7917f), ws@6.2.3 (https://github.com/websockets/ws/commit/eeb76d313e2a00dd5247ca3597bba7877d064a63), and ws@5.2.4 (https://github.com/websockets/ws/commit/4abd8f6de4b0b65ef80b3ff081989479ed93377e)\n\n### Workarounds\n\nIn vulnerable versions of ws, the issue can be mitigated in the following ways:\n\n1. Reduce the maximum allowed length of the request headers using the [`\tmax http header size=size` [\tand/or the [`maxHeaderSize` [\toptions so that no more headers than the `server.maxHeadersCount` limit can be sent.\n2. Set `server.maxHeadersCount` to `0` so that no limit is applied.\n\n### Credits\n\nThe vulnerability was reported by [Ryan LaPointe (https://github.com/rrlapointe) in https://github.com/websockets/ws/issues/2230.\n\n### References\n\n\thttps://github.com/websockets/ws/issues/2230\n\thttps://github.com/websockets/ws/pull/2231\n\n[`\tmax http header size=size` : https://nodejs.org/api/cli.html#\tmax http header sizesize\n[`maxHeaderSize` : https://nodejs.org/api/http.html#httpcreateserveroptions requestlistener\n[`server.maxHeadersCount` : https://nodejs.org/api/http.html#servermaxheaderscount\n\nUpgrade to version 8.17.1 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-42459", "package": "npm:elliptic", "purl": "pkg:npm/elliptic@6.5.4", "package_type": "npm", "package_usage": "N/A", "version": "6.5.4", "fix_version": "6.5.7", "severity": "LOW", "cvss_score": "5.3", "short_description": "# Elliptic's EDDSA missing signature length check\nIn the Elliptic package 6.5.6 for Node.js, EDDSA signature malleability occurs because there is a missing signature length check, and thus zero valued bytes can be removed or appended.\nUpgrade to version 6.5.7 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-42460", "package": "npm:elliptic", "purl": "pkg:npm/elliptic@6.5.4", "package_type": "npm", "package_usage": "N/A", "version": "6.5.4", "fix_version": "6.5.7", "severity": "LOW", "cvss_score": "5.3", "short_description": "# Elliptic's ECDSA missing check for whether leading bit of r and s is zero\nIn the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because there is a missing check for whether the leading bit of r and s is zero.\nUpgrade to version 6.5.7 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-42461", "package": "npm:elliptic", "purl": "pkg:npm/elliptic@6.5.4", "package_type": "npm", "package_usage": "N/A", "version": "6.5.4", "fix_version": "6.5.7", "severity": "LOW", "cvss_score": "5.3", "short_description": "# Elliptic allows BER encoded signatures\nIn the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because BER encoded signatures are allowed.\nUpgrade to version 6.5.7 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-42369", "package": "npm:matrix-js-sdk", "purl": "pkg:npm/matrix-js-sdk@12.5.0", "package_type": "npm", "package_usage": "N/A", "version": "12.5.0", "fix_version": "34.3.1", "severity": "MEDIUM", "cvss_score": "4.1", "short_description": "# matrix js sdk will freeze when a user sets a room with itself as a its predecessor\n### Impact\nA malicious homeserver can craft a room or room structure such that the predecessors form a cycle. The matrix js sdk's `getRoomUpgradeHistory` function will infinitely recurse in this case, causing the code to hang. This method is public but also called by the 'leaveRoomChain()' method, so leaving a room will also trigger the bug.\n\nEven if the CVSS score would be 4.1 ([AV:N/AC:L/PR:L/UI:R/S:C/C:N/I:N/A:L (https://nvd.nist.gov/vuln metrics/cvss/v3 calculator?vector=AV:N/AC:L/PR:L/UI:R/S:C/C:N/I:N/A:L&version=3.1)) we classify this as High severity issue.\n\n### Patches\nThis was patched in matrix js sdk 34.3.1.\n\n### Workarounds\nSanity check rooms before passing them to the matrix js sdk or avoid calling either `getRoomUpgradeHistory` or `leaveRoomChain`.\n\n### References\nN/A.\n\nUpgrade to version 34.3.1 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-4067", "package": "npm:micromatch", "purl": "pkg:npm/micromatch@4.0.5", "package_type": "npm", "package_usage": "N/A", "version": "4.0.5", "fix_version": "4.0.8", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Regular Expression Denial of Service (ReDoS) in micromatch\nThe NPM package `micromatch` prior to version 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persisted prior to https://github.com/micromatch/micromatch/pull/266. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching.\n\nUpgrade to version 4.0.8 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-21501", "package": "npm:sanitize-html", "purl": "pkg:npm/sanitize-html@2.7.2", "package_type": "npm", "package_usage": "N/A", "version": "2.7.2", "fix_version": "2.12.1", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# sanitize html Information Exposure vulnerability\nVersions of the package sanitize html before 2.12.1 are vulnerable to Information Exposure when used on the backend and with the style attribute allowed, allowing enumeration of files in the system (including project dependencies). An attacker could exploit this vulnerability to gather details about the file system structure and dependencies of the targeted server.\nUpgrade to version 2.12.1 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-29415", "package": "npm:ip", "purl": "pkg:npm/ip@1.1.5", "package_type": "npm", "package_usage": "N/A", "version": "1.1.5", "fix_version": "1.1.9", "severity": "HIGH", "cvss_score": "8.1", "short_description": "# ip SSRF improper categorization in isPublic\nThe ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE 2023 42282.\nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-45590", "package": "npm:body-parser", "purl": "pkg:npm/body-parser@1.13.3", "package_type": "npm", "package_usage": "N/A", "version": "1.13.3", "fix_version": "1.20.3", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# body parser vulnerable to denial of service when url encoding is enabled\n### Impact\n\nbody parser <1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service.\n\n### Patches\n\nthis issue is patched in 1.20.3\n\n### References\n\nUpgrade to version 1.20.3 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-43799", "package": "npm:send", "purl": "pkg:npm/send@0.1.4", "package_type": "npm", "package_usage": "N/A", "version": "0.1.4", "fix_version": "0.11.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# send vulnerable to template injection that can lead to XSS\n### Impact\n\npassing untrusted user input\t even after sanitizing it\t to `SendStream.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in send 0.19.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n\nUpgrade to version 0.19.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-43800", "package": "npm:serve-static", "purl": "pkg:npm/serve-static@1.10.0", "package_type": "npm", "package_usage": "N/A", "version": "1.10.0", "fix_version": "1.16.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# serve static vulnerable to template injection that can lead to XSS\n### Impact\n\npassing untrusted user input\t even after sanitizing it\t to `redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in serve static 1.16.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n\nUpgrade to version 1.16.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-43796", "package": "npm:express", "purl": "pkg:npm/express@4.13.3", "package_type": "npm", "package_usage": "N/A", "version": "4.13.3", "fix_version": "4.19.2", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# express vulnerable to XSS via response.redirect()\n### Impact\n\nIn express <4.20.0, passing untrusted user input\t even after sanitizing it\t to `response.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in express 4.20.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n\nUpgrade to version 4.20.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-45296", "package": "npm:path-to-regexp", "purl": "pkg:npm/path-to-regexp@0.1.7", "package_type": "npm", "package_usage": "N/A", "version": "0.1.7", "fix_version": "6.3.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# path to regexp outputs backtracking regular expressions\n### Impact\n\nA bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (`.`). For example, `/:a :b`.\n\n### Patches\n\nFor users of 0.1, upgrade to `0.1.10`. All other users should upgrade to `8.0.0`.\n\nThese versions add backtrack protection when a custom regex pattern is not provided:\n\n\t[0.1.10 (https://github.com/pillarjs/path to regexp/releases/tag/v0.1.10)\n\t[1.9.0 (https://github.com/pillarjs/path to regexp/releases/tag/v1.9.0)\n\t[3.3.0 (https://github.com/pillarjs/path to regexp/releases/tag/v3.3.0)\n\t[6.3.0 (https://github.com/pillarjs/path to regexp/releases/tag/v6.3.0)\n\nThey do not protect against vulnerable user supplied capture groups. Protecting against explicit user patterns is out of scope for old versions and not considered a vulnerability.\n\nVersion [7.1.0 (https://github.com/pillarjs/path to regexp/releases/tag/v7.1.0) can enable `strict: true` and get an error when the regular expression might be bad.\n\nVersion [8.0.0 (https://github.com/pillarjs/path to regexp/releases/tag/v8.0.0) removes the features that can cause a ReDoS.\n\n### Workarounds\n\nAll versions can be patched by providing a custom regular expression for parameters after the first in a single segment. As long as the custom regular expression does not match the text before the parameter, you will be safe. For example, change `/:a :b` to `/:a :b([\t/ +)`.\n\nIf paths cannot be rewritten and versions cannot be upgraded, another alternative is to limit the URL length. For example, halving the attack string improves performance by 4x faster.\n\n### Details\n\nUsing `/:a :b` will produce the regular expression `/\t/([\t/ +?) ([\t/ +?) /?$/`. This can be exploited by a path such as `/a${' a'.repeat(8_000)}/a`. [OWASP (https://owasp.org/www community/attacks/Regular_expression_Denial_of_Service_ _ReDoS) has a good example of why this occurs, but the TL;DR is the `/a` at the end ensures this route would never match but due to naive backtracking it will still attempt every combination of the `:a :b` on the repeated 8,000 ` a`.\n\nBecause JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and can lead to a DoS. In local benchmarks, exploiting the unsafe regex will result in performance that is over 1000x worse than the safe regex. In a more realistic environment using Express v4 and 10 concurrent connections, this translated to average latency of ~600ms vs 1ms.\n\n### References\n\n* [OWASP (https://owasp.org/www community/attacks/Regular_expression_Denial_of_Service_ _ReDoS)\n* [Detailed blog post (https://blakeembrey.com/posts/2024 09 web redos/)\nUpgrade to version 6.3.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-45801", "package": "npm:dompurify", "purl": "pkg:npm/dompurify@2.3.8", "package_type": "npm", "package_usage": "N/A", "version": "2.3.8", "fix_version": "2.5.4", "severity": "HIGH", "cvss_score": "7.0", "short_description": "# DOMPurify allows tampering by prototype pollution\nIt has been discovered that malicious HTML using special nesting techniques can bypass the depth checking added to DOMPurify in recent releases. It was also possible to use Prototype Pollution to weaken the depth check.\n\nThis renders dompurify unable to avoid XSS attack.\n\nFixed by https://github.com/cure53/DOMPurify/commit/1e520262bf4c66b5efda49e2316d6d1246ca7b21 (3.x branch) and https://github.com/cure53/DOMPurify/commit/26e1d69ca7f769f5c558619d644d90dd8bf26ebc (2.x branch).\nUpgrade to version 2.5.4 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-46935", "package": "npm:@rocket.chat/message-parser", "purl": "pkg:npm/%40rocket.chat/message-parser@0.31.27", "package_type": "npm", "package_usage": "N/A", "version": "0.31.27", "fix_version": "0.31.30", "severity": "MEDIUM", "cvss_score": "7.5", "short_description": "# Denial of service in rocket chat message parser\nRocket.Chat 6.12.0, 6.11.2, 6.10.5, 6.9.6, 6.8.6, 6.7.8, and earlier is vulnerable to denial of service (DoS). Attackers who craft messages with specific characters may crash the workspace due to an issue in the message parser.\nUpgrade to version 0.31.30 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-47178", "package": "npm:basic-auth-connect", "purl": "pkg:npm/basic-auth-connect@1.0.0", "package_type": "npm", "package_usage": "N/A", "version": "1.0.0", "fix_version": "1.1.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# basic auth connect's callback uses time unsafe string comparison\n### Impact\n\nbasic auth connect <1.1.0 uses a timing unsafe equality comparison that can leak timing information\n\n### Patches\n\nthis issue has been fixed in basic auth connect 1.1.0\n\n### References\n\nUpgrade to version 1.1.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-47764", "package": "npm:cookie", "purl": "pkg:npm/cookie@0.1.0", "package_type": "npm", "package_usage": "N/A", "version": "0.1.0", "fix_version": "0.7.0", "severity": "LOW", "cvss_score": "2.0", "short_description": "# cookie accepts cookie name, path, and domain with out of bounds characters\n### Impact\n\nThe cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, `serialize(\"userName=<script>alert('XSS3')</script>; Max Age=2592000; a\", value)` would result in `\"userName=<script>alert('XSS3')</script>; Max Age=2592000; a=test\"`, setting `userName` cookie to `<script>` and ignoring `value`.\n\nA similar escape can be used for `path` and `domain`, which could be abused to alter other fields of the cookie.\n\n### Patches\n\nUpgrade to 0.7.0, which updates the validation for `name`, `path`, and `domain`.\n\n### Workarounds\n\nAvoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.\n\n### References\n\n* https://github.com/jshttp/cookie/pull/167\nUpgrade to version 0.7.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-47875", "package": "npm:dompurify", "purl": "pkg:npm/dompurify@2.3.8", "package_type": "npm", "package_usage": "N/A", "version": "2.3.8", "fix_version": "2.5.0", "severity": "HIGH", "cvss_score": "10.0", "short_description": "# DOMpurify has a nesting based mXSS\nDOMpurify was vulnerable to nesting based mXSS \n\nfixed by [0ef5e537 (https://github.com/cure53/DOMPurify/tree/0ef5e537a514f904b6aa1d7ad9e749e365d7185f) (2.x) and\n[merge 943 (https://github.com/cure53/DOMPurify/pull/943)\n\nBackporter should be aware of GHSA mmhx hmjr r674 (CVE 2024 45801) when cherry picking\n\nPOC is avaible under [test (https://github.com/cure53/DOMPurify/blob/0ef5e537a514f904b6aa1d7ad9e749e365d7185f/test/test suite.js#L2098)\nUpgrade to version 2.5.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-48949", "package": "npm:elliptic", "purl": "pkg:npm/elliptic@6.5.4", "package_type": "npm", "package_usage": "N/A", "version": "6.5.4", "fix_version": "6.5.6", "severity": "LOW", "cvss_score": "5.3", "short_description": "# Elliptic's verify function omits uniqueness validation\nThe Elliptic package 6.5.5 for Node.js for EDDSA implementation does not perform the required check if the signature proof(s) is within the bounds of the order n of the base point of the elliptic curve, leading to signature malleability. Namely, the `verify` function in `lib/elliptic/eddsa/index.js` omits `sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()` validation.\n\nThis vulnerability could have a security relevant impact if an application relies on the uniqueness of a signature.\nUpgrade to version 6.5.6 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-47080", "package": "npm:matrix-js-sdk", "purl": "pkg:npm/matrix-js-sdk@12.5.0", "package_type": "npm", "package_usage": "N/A", "version": "12.5.0", "fix_version": "34.8.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Matrix JavaScript SDK's key history sharing could share keys to malicious devices\n### Impact\nIn matrix js sdk versions 9.11.0 through 34.7.0, the method `MatrixClient.sendSharedHistoryKeys` is vulnerable to interception by malicious homeservers.\tThe method implements functionality proposed in [MSC3061 (https://github.com/matrix org/matrix spec proposals/pull/3061) and can be used by clients to share historical message keys with newly invited users, granting them access to past messages in the room.\n\nHowever, it unconditionally sends these \"shared\" keys to all of the invited user's devices, regardless of whether the user's cryptographic identity is verified or whether the user's devices are signed by that identity. This allows the attacker to potentially inject its own devices to receive sensitive historical keys without proper security checks.\n\nNote that this only affects clients running the SDK with the legacy crypto stack. Clients using the new Rust cryptography stack (i.e. those that call `MatrixClient.initRustCrypto()` instead of `MatrixClient.initCrypto()`) are unaffected by this vulnerability, because `MatrixClient.sendSharedHistoryKeys()` raises an exception in such environments.\n\n### Patches\nFixed in matrix js sdk 34.8.0 by removing the vulnerable functionality.\n\n### Workarounds\nRemove use of affected functionality from clients.\n\n### References\n\t[MSC3061 (https://github.com/matrix org/matrix spec proposals/pull/3061)\n\n### For more information\nIf you have any questions or comments about this advisory, please email us at [security at matrix.org (mailto:security@matrix.org).\nUpgrade to version 34.8.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-26311", "package": "npm:useragent", "purl": "pkg:npm/useragent@2.3.0", "package_type": "npm", "package_usage": "N/A", "version": "2.3.0", "fix_version": null, "severity": "MEDIUM", "cvss_score": "7.5", "short_description": "# useragent Regular Expression Denial of Service vulnerability\nUseragent is a user agent parser for Node.js. All versions as of time of publication contain one or more regular expressions that are vulnerable to Regular Expression Denial of Service (ReDoS).\nNone", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-48910", "package": "npm:dompurify", "purl": "pkg:npm/dompurify@2.3.8", "package_type": "npm", "package_usage": "N/A", "version": "2.3.8", "fix_version": "2.4.2", "severity": "CRITICAL", "cvss_score": "9.1", "short_description": "# DOMPurify vulnerable to tampering by prototype polution\ndompurify was vulnerable to prototype pollution\n\nFixed by https://github.com/cure53/DOMPurify/commit/d1dd0374caef2b4c56c3bd09fe1988c3479166dc\nUpgrade to version 2.4.2 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-48948", "package": "npm:elliptic", "purl": "pkg:npm/elliptic@6.5.4", "package_type": "npm", "package_usage": "N/A", "version": "6.5.4", "fix_version": "6.6.0", "severity": "LOW", "cvss_score": "4.8", "short_description": "# Valid ECDSA signatures erroneously rejected in Elliptic\nThe Elliptic prior to 6.6.0 for Node.js, in its for ECDSA implementation, does not correctly verify valid signatures if the hash contains at least four leading 0 bytes and when the order of the elliptic curve's base point is smaller than the hash, because of an _truncateToN anomaly. This leads to valid signatures being rejected. Legitimate transactions or communications may be incorrectly flagged as invalid.\nUpgrade to version 6.6.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-50336", "package": "npm:matrix-js-sdk", "purl": "pkg:npm/matrix-js-sdk@12.5.0", "package_type": "npm", "package_usage": "N/A", "version": "12.5.0", "fix_version": "34.11.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# matrix js sdk has insufficient MXC URI validation which allows client side path traversal\n### Summary\n\nmatrix js sdk before 34.11.0 is vulnerable to client side path traversal via crafted MXC URIs. A malicious room member can trigger clients based on the matrix js sdk to issue arbitrary authenticated GET requests to the client's homeserver.\n\n### Details\n\nThe Matrix specification demands homeservers to [perform validation (https://spec.matrix.org/v1.12/client server api/#security considerations 5) of the `server name` and `media id` components of MXC URIs with the intent to prevent path traversal. However, it is not mentioned that a similar check must also be performed on the client to prevent *client side* path traversal. matrix js sdk fails to perform this validation.\n\n### Patches\n\nFixed in matrix js sdk 34.11.1.\n\n### Workarounds\n\nNone.\n\n### References\n\n\thttps://spec.matrix.org/v1.12/client server api/#security considerations 5\n\thttps://blog.doyensec.com/2024/07/02/cspt2csrf.html\n\nUpgrade to version 34.11.1 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2014-7191", "package": "npm:qs", "purl": "pkg:npm/qs@0.6.6", "package_type": "npm", "package_usage": "N/A", "version": "0.6.6", "fix_version": "1.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Denial-of-Service Memory Exhaustion in qs\nVersions prior to 1.0 of `qs` are affected by a denial of service condition. This condition is triggered by parsing a crafted string that deserializes into very large sparse arrays, resulting in the process running out of memory and eventually crashing.\n\n\n## Recommendation\n\nUpdate to version 1.0.0 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2014-7191", "https://github.com/visionmedia/node-querystring/issues/104", "https://github.com/raymondfeng/node-querystring/commit/43a604b7847e56bba49d0ce3e222fe89569354d8", "https://access.redhat.com/errata/RHSA-2016:1380", "https://exchange.xforce.ibmcloud.com/vulnerabilities/96729", "https://github.com/advisories/GHSA-jjv7-qpx3-h62q", "https://github.com/visionmedia/node-querystring", "https://www.npmjs.com/advisories/29", "http://secunia.com/advisories/60026", "http://secunia.com/advisories/62170", "http://www-01.ibm.com/support/docview.wss?uid=swg21685987", "http://www-01.ibm.com/support/docview.wss?uid=swg21687263", "http://www-01.ibm.com/support/docview.wss?uid=swg21687928"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-25883", "package": "npm:semver", "purl": "pkg:npm/semver@5.3.0", "package_type": "npm", "package_usage": "N/A", "version": "5.3.0", "fix_version": "5.7.2", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# semver vulnerable to Regular Expression Denial of Service\nVersions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2022-25883", "https://github.com/npm/node-semver/pull/564", "https://github.com/npm/node-semver/pull/585", "https://github.com/npm/node-semver/pull/593", "https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0", "https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441", "https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c", "https://github.com/npm/node-semver", "https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104", "https://github.com/npm/node-semver/blob/main/internal/re.js#L138", "https://github.com/npm/node-semver/blob/main/internal/re.js#L160", "https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2018-6829", "package": "debian:libgcrypt20", "purl": "debian:libgcrypt20", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "", "severity": "LOW", "cvss_score": "2.0", "short_description": "cipher/elgamal.c in Libgcrypt through 1.8.2, when used to encrypt mess ...\nNOTE: https://github.com/weikengchen/attack-on-libgcrypt-elgamal\nNOTE: https://github.com/weikengchen/attack-on-libgcrypt-elgamal/wiki\nNOTE: https://lists.gnupg.org/pipermail/gcrypt-devel/2018-February/004394.html\nNOTE: GnuPG uses ElGamal in hybrid mode only.\nNOTE: This is not a vulnerability in libgcrypt, but in an application using\nNOTE: it in an insecure manner, see also\nNOTE: https://lists.gnupg.org/pipermail/gcrypt-devel/2018-February/004401.html", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2018-20834", "package": "npm:tar", "purl": "pkg:npm/tar@4.4.19", "package_type": "npm", "package_usage": "N/A", "version": "4.4.19", "fix_version": "2.2.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Arbitrary File Overwrite in tar\nVersions of `tar` prior to 4.4.2 for 4.x and 2.2.2 for 2.x are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file.\n\n\n## Recommendation\n\nFor tar 4.x, upgrade to version 4.4.2 or later.\nFor tar 2.x, upgrade to version 2.2.2 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2018-20834", "https://github.com/npm/node-tar/commit/7ecef07da6a9e72cc0c4d0c9c6a8e85b6b52395d", "https://github.com/npm/node-tar/commit/b0c58433c22f5e7fe8b1c76373f27e3f81dcd4c8", "https://hackerone.com/reports/344595", "https://access.redhat.com/errata/RHSA-2019:1821", "https://github.com/isaacs/node-tar", "https://github.com/npm/node-tar/commits/v2.2.2", "https://github.com/npm/node-tar/compare/58a8d43...a5f7779"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-28500", "package": "npm:lodash", "purl": "pkg:npm/lodash@4.17.19", "package_type": "npm", "package_usage": "N/A", "version": "4.17.19", "fix_version": "4.17.21", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Regular Expression Denial of Service (ReDoS) in lodash\nAll versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `toNumber`, `trim` and `trimEnd` functions. \n\nSteps to reproduce (provided by reporter Liyuan Chen):\n```js\nvar lo = require('lodash');\n\nfunction build_blank(n) {\n\t\tvar ret = \"1\"\n\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tret += \" \"\n\t\t}\n\t\treturn ret + \"1\";\n}\nvar s = build_blank(50000) var time0 = Date.now();\nlo.trim(s) \nvar time_cost0 = Date.now() - time0;\nconsole.log(\"time_cost0: \" + time_cost0);\nvar time1 = Date.now();\nlo.toNumber(s) var time_cost1 = Date.now() - time1;\nconsole.log(\"time_cost1: \" + time_cost1);\nvar time2 = Date.now();\nlo.trimEnd(s);\nvar time_cost2 = Date.now() - time2;\nconsole.log(\"time_cost2: \" + time_cost2);\n```\n\n## Related CVE(s)\nCVE-2020-28500, SNYK-JAVA-ORGFUJIONWEBJARS-1074896, SNYK-JAVA-ORGWEBJARS-1074894, SNYK-JAVA-ORGWEBJARSBOWER-1074892, SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895, SNYK-JAVA-ORGWEBJARSNPM-1074893, SNYK-JS-LODASH-1018905", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2020-28500", "https://github.com/lodash/lodash/pull/5065", "https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7", "https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a", "https://www.oracle.com/security-alerts/cpuoct2021.html", "https://www.oracle.com/security-alerts/cpujul2022.html", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://www.oracle.com//security-alerts/cpujul2021.html", "https://snyk.io/vuln/SNYK-JS-LODASH-1018905", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894", "https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896", "https://security.netapp.com/advisory/ntap-20210312-0006", "https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8", "https://github.com/lodash/lodash", "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2013-7423", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "The send_dg function in resolv/res_send.c in GNU C Library (aka glibc or libc6) before 2.20 does not properly reuse file descriptors, which allows remote attackers to send DNS queries to unintended locations via a large number of requests that trigger a call to the getaddrinfo function.", "related_urls": ["https://www.suse.com/security/cve/CVE-2013-7423.html", "https://bugzilla.suse.com/1123874", "https://bugzilla.suse.com/915526"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-2236", "package": "debian:libgcrypt20", "purl": "debian:libgcrypt20", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A timing-based side-channel flaw was found in libgcrypt's RSA implemen ...\nNOTE: https://bugzilla.redhat.com/show_bug.cgi?id=2268268\nNOTE: https://lists.gnupg.org/pipermail/gcrypt-devel/2024-March/005607.html\nNOTE: https://github.com/tomato42/marvin-toolkit/tree/master/example/libgcrypt\nNOTE: https://people.redhat.com/~hkario/marvin/", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-46175", "package": "npm:json5", "purl": "pkg:npm/json5@1.0.1", "package_type": "npm", "package_usage": "N/A", "version": "1.0.1", "fix_version": "1.0.2", "severity": "HIGH", "cvss_score": "7.1", "short_description": "# Prototype Pollution in JSON5 via Parse Method\nThe `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\n \nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n \n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n\tif (props.isAdmin) {\n\t\tconsole.log('Doing dangerous thing as admin.');\n\t} else {\n\t\tconsole.log('Doing dangerous thing as user.');\n\t}\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n\tlet searchKeyFound = false;\n\tObject.keys(obj).forEach((key) => {\n\t\tif (searchKeys.indexOf(key) > -1) {\n\t\t\tsearchKeyFound = true;\n\t\t}\n\t});\n\treturn searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n\tdoSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n\tthrow new Error('Forbidden...');\n}\n```\n \nIf the user attempts to set the `isAdmin` key, their request will be rejected:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n\tdoSomethingDangerous(props);\n} else {\n\tthrow new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n \nHowever, users can instead set the `__proto__` key to `{\"isAdmin\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n\tdoSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n\tthrow new Error('Forbidden...');\n}\n ```", "related_urls": ["https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h", "https://nvd.nist.gov/vuln/detail/CVE-2022-46175", "https://github.com/json5/json5/issues/199", "https://github.com/json5/json5/issues/295", "https://github.com/json5/json5/pull/298", "https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972", "https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8", "https://github.com/json5/json5", "https://lists.debian.org/debian-lts-announce/2023/11/msg00021.html", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2017-16137", "package": "npm:debug", "purl": "pkg:npm/debug@0.8.1", "package_type": "npm", "package_usage": "N/A", "version": "0.8.1", "fix_version": "2.6.9", "severity": "LOW", "cvss_score": "3.7", "short_description": "# Regular Expression Denial of Service in debug\nAffected versions of `debug` are vulnerable to regular expression denial of service when untrusted user input is passed into the `o` formatter. \n\nAs it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.\n\nThis was later re-introduced in version v3.2.0, and then repatched in versions 3.2.7 and 4.3.1.\n\n## Recommendation\n\nVersion 2.x.x: Update to version 2.6.9 or later.\nVersion 3.1.x: Update to version 3.1.0 or later.\nVersion 3.2.x: Update to version 3.2.7 or later.\nVersion 4.x.x: Update to version 4.3.1 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2017-16137", "https://github.com/debug-js/debug/issues/797", "https://github.com/visionmedia/debug/issues/501", "https://github.com/visionmedia/debug/pull/504", "https://github.com/debug-js/debug/commit/4e2150207c568adb9ead8f4c4528016081c88020", "https://github.com/debug-js/debug/commit/71169065b5262f9858ac78cc0b688c84a438f290", "https://github.com/debug-js/debug/commit/b6d12fdbc63b483e5c969da33ea6adc09946b5ac", "https://github.com/debug-js/debug/commit/f53962e944a87e6ca9bb622a2a12dffc22a9bb5a", "https://github.com/visionmedia/debug", "https://lists.apache.org/thread.html/r8ba4c628fba7181af58817d452119481adce4ba92e889c643e4c7dd3@%3Ccommits.netbeans.apache.org%3E", "https://lists.apache.org/thread.html/rb5ac16fad337d1f3bb7079549f97d8166d0ef3082629417c39f12d63@%3Cnotifications.netbeans.apache.org%3E"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-24772", "package": "npm:node-forge", "purl": "pkg:npm/node-forge@0.7.6", "package_type": "npm", "package_usage": "N/A", "version": "0.7.6", "fix_version": "1.3.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Improper Verification of Cryptographic Signature in node-forge\n### Impact\n\nRSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### References\n\nFor more information, please see\n[\"Bleichenbacher's RSA signature forgery based on implementation error\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\nby Hal Finney.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)", "related_urls": ["https://github.com/digitalbazaar/forge/security/advisories/GHSA-x4jg-mjrx-434g", "https://nvd.nist.gov/vuln/detail/CVE-2022-24772", "https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1", "https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2", "https://github.com/digitalbazaar/forge"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3995", "package": "suse:libuuid1", "purl": "suse:libuuid1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.36.2-150300.4.14.3", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows an unprivileged local attacker to unmount FUSE filesystems that belong to certain other users who have a UID that is a prefix of the UID of the attacker in its string form. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-3995.html", "https://bugzilla.suse.com/1194976"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2013-0242", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "Buffer overflow in the extend_buffers function in the regular expression matcher (posix/regexec.c) in glibc, possibly 2.17 and earlier, allows context-dependent attackers to cause a denial of service (memory corruption and crash) via crafted multibyte characters.", "related_urls": ["https://www.suse.com/security/cve/CVE-2013-0242.html", "https://bugzilla.suse.com/801246", "https://bugzilla.suse.com/848783", "https://bugzilla.suse.com/882910"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "GHSA-wxgw-qj99-44c2", "package": "npm:node-forge", "purl": "pkg:npm/node-forge@0.7.6", "package_type": "npm", "package_usage": "N/A", "version": "0.7.6", "fix_version": "0.10.0", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Prototype Pollution in node-forge util.setPath API\n### Impact\n`forge.util.setPath` had a potential prototype pollution issue if called with untrusted keys. This API was not used by forge itself.\n\n### Patches\nThe `forge.util.setPath` API and related functions were removed in 0.10.0.\n\n### Workarounds\nDon't call `forge.util.setPath` directly or indirectly with untrusted keys.\n\n### References\n- https://security.snyk.io/vuln/SNYK-JS-NODEFORGE-598677\n- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7720\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge).\n* Email us at support@digitalbazaar.com.", "related_urls": ["https://github.com/digitalbazaar/forge/security/advisories/GHSA-wxgw-qj99-44c2"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-52425", "package": "suse:libexpat1", "purl": "suse:libexpat1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.4.4-150400.3.17.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.", "related_urls": ["https://www.suse.com/security/cve/CVE-2023-52425.html", "https://bugzilla.suse.com/1219559"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28757", "package": "suse:libexpat1", "purl": "suse:libexpat1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.4.4-150400.3.17.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).", "related_urls": ["https://www.suse.com/security/cve/CVE-2024-28757.html", "https://bugzilla.suse.com/1221289"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "GHSA-gf8q-jrpm-jvxq", "package": "npm:node-forge", "purl": "pkg:npm/node-forge@0.7.6", "package_type": "npm", "package_usage": "N/A", "version": "0.7.6", "fix_version": "1.3.0", "severity": "LOW", "cvss_score": "2.0", "short_description": "# URL parsing in node-forge could lead to undesired behavior.\n### Impact\nThe regex used for the `forge.util.parseUrl` API would not properly parse certain inputs resulting in a parsed data structure that could lead to undesired behavior.\n\n### Patches\n`forge.util.parseUrl` and other very old related URL APIs were removed in 1.0.0 in favor of letting applications use the more modern WHATWG URL Standard API.\n\n### Workarounds\nEnsure code does not directly or indirectly call `forge.util.parseUrl` with untrusted input.\n\n### References\n- https://www.huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at support@digitalbazaar.com", "related_urls": ["https://github.com/digitalbazaar/forge/security/advisories/GHSA-gf8q-jrpm-jvxq", "https://nvd.nist.gov/vuln/detail/CVE-2022-0122", "https://github.com/digitalbazaar/forge", "https://www.huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-34342", "package": "npm:pdfjs-dist", "purl": "pkg:npm/pdfjs-dist@2.14.305", "package_type": "npm", "package_usage": "N/A", "version": "2.14.305", "fix_version": "4.2.67", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# PDF.js vulnerable to arbitrary JavaScript execution upon opening a malicious PDF\n### Impact\nIf pdf.js is used to load a malicious PDF, and PDF.js is configured with `isEvalSupported` set to `true` (which is the default value), unrestricted attacker-controlled JavaScript will be executed in the context of the hosting domain.\n\n### Patches\nThe patch removes the use of `eval`:\nhttps://github.com/mozilla/pdf.js/pull/18015\n\n### Workarounds\nSet the option `isEvalSupported` to `false`. \n\n### References\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1893645\n\n## Related CVE(s)\nCVE-2024-34342, CVE-2024-4367, GHSA-87hq-q4gp-9wr4", "related_urls": ["https://github.com/mozilla/pdf.js/security/advisories/GHSA-wgrm-67xf-hhpq", "https://github.com/mozilla/pdf.js/pull/18015", "https://github.com/mozilla/pdf.js/commit/85e64b5c16c9aaef738f421733c12911a441cec6", "https://bugzilla.mozilla.org/show_bug.cgi?id=1893645", "https://github.com/mozilla/pdf.js"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2017-20162", "package": "npm:ms", "purl": "pkg:npm/ms@0.7.1", "package_type": "npm", "package_usage": "N/A", "version": "0.7.1", "fix_version": "2.0.0", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Vercel ms Inefficient Regular Expression Complexity vulnerability\nA vulnerability, which was classified as problematic, has been found in vercel ms up to 1.x. This issue affects the function parse of the file index.js. The manipulation of the argument str leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.0.0 is able to address this issue. The name of the patch is caae2988ba2a37765d055c4eee63d383320ee662. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2017-20162", "https://github.com/vercel/ms/pull/89", "https://github.com/vercel/ms/commit/caae2988ba2a37765d055c4eee63d383320ee662", "https://github.com/vercel/ms", "https://github.com/vercel/ms/releases/tag/2.0.0", "https://vuldb.com/?ctiid.217451", "https://vuldb.com/?id.217451"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-1304", "package": "debian:e2fsprogs", "purl": "debian:e2fsprogs", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "1.46.6~rc1-1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46. ...\nNOTE: https://bugzilla.redhat.com/show_bug.cgi?id=2069726\nNOTE: https://bugzilla.redhat.com/show_bug.cgi?id=2068113\nNOTE: https://lore.kernel.org/linux-ext4/20220421173148.20193-1-lczerner@redhat.com/T/#u\nNOTE: Fixed by: https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git/commit/?h=maint&id=ab51d587bb9b229b1fade1afd02e1574c1ba5c76", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3807", "package": "npm:ansi-regex", "purl": "pkg:npm/ansi-regex@2.1.1", "package_type": "npm", "package_usage": "N/A", "version": "2.1.1", "fix_version": "3.0.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Inefficient Regular Expression Complexity in chalk/ansi-regex\nansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service when parsing invalid ANSI escape codes.\n\n**Proof of Concept**\n```js\nimport ansiRegex from 'ansi-regex';\nfor(var i = 1; i <= 50000; i++) {\n\t\tvar time = Date.now();\n\t\tvar attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\n\t\tansiRegex().test(attack_str)\n\t\tvar time_cost = Date.now() - time;\n\t\tconsole.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\n}\n```\nThe ReDOS is mainly due to the sub-patterns `[[\\]()#;?]*` and `(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*`", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-3807", "https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311", "https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774", "https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1", "https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a", "https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9", "https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8", "https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908", "https://github.com/chalk/ansi-regex", "https://github.com/chalk/ansi-regex/releases/tag/v6.0.1", "https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994", "https://security.netapp.com/advisory/ntap-20221014-0002", "https://www.oracle.com/security-alerts/cpuapr2022.html"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2014-9402", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "The nss_dns implementation of getnetbyname in GNU C Library (aka glibc) before 2.21, when the DNS backend in the Name Service Switch configuration is enabled, allows remote attackers to cause a denial of service (infinite loop) by sending a positive answer while a network name is being process.", "related_urls": ["https://www.suse.com/security/cve/CVE-2014-9402.html", "https://bugzilla.suse.com/910599"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-4039", "package": "suse:libgcc_s1", "purl": "suse:libgcc_s1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "13.2.1+git7813-150000.1.6.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.", "related_urls": ["https://www.suse.com/security/cve/CVE-2023-4039.html", "https://bugzilla.suse.com/1214052"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-1664", "package": "debian:dpkg", "purl": "debian:dpkg", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "1.21.8", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "Dpkg::Source::Archive in dpkg, the Debian package management system, b ...\nNOTE: https://git.dpkg.org/cgit/dpkg/dpkg.git/commit/?id=7a6c03cb34d4a09f35df2f10779cbf1b70a5200b (1.21.8)\nNOTE: https://git.dpkg.org/cgit/dpkg/dpkg.git/commit/?id=58814cacee39c4ce9e2cd0e3a3b9b57ad437eff5 (1.20.10)\nNOTE: https://git.dpkg.org/cgit/dpkg/dpkg.git/commit/?id=1f23dddc17f69c9598477098c7fb9936e15fa495 (1.19.8)\nNOTE: https://git.dpkg.org/cgit/dpkg/dpkg.git/commit/?id=faa4c92debe45412bfcf8a44f26e827800bb24be (1.18.26)", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2012-3405", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "The vfprintf function in stdio-common/vfprintf.c in libc in GNU C Library (aka glibc) 2.14 and other versions does not properly calculate a buffer length, which allows context-dependent attackers to bypass the FORTIFY_SOURCE format-string protection mechanism and cause a denial of service (segmentation fault and crash) via a format string with a large number of format specifiers that triggers \"desynchronization within the buffer size handling,\" a different vulnerability than CVE-2012-3404.", "related_urls": ["https://www.suse.com/security/cve/CVE-2012-3405.html", "https://bugzilla.suse.com/770891"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2017-16138", "package": "npm:mime", "purl": "pkg:npm/mime@1.2.11", "package_type": "npm", "package_usage": "N/A", "version": "1.2.11", "fix_version": "1.4.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# mime Regular Expression Denial of Service when MIME lookup performed on untrusted user input\nAffected versions of `mime` are vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.\n\n\n## Recommendation\n\nUpdate to version 2.0.3 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2017-16138", "https://github.com/broofa/node-mime/issues/167", "https://github.com/broofa/mime/commit/1df903fdeb9ae7eaa048795b8d580ce2c98f40b0", "https://github.com/broofa/mime/commit/855d0c4b8b22e4a80b9401a81f2872058eae274d", "https://github.com/broofa/mime"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-3715", "package": "debian:bash", "purl": "debian:bash", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "5.2-1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A flaw was found in the bash package, where a heap-buffer overflow can ...\nNOTE: https://bugzilla.redhat.com/show_bug.cgi?id=2126720\nNOTE: https://lists.gnu.org/archive/html/bug-bash/2022-08/msg00147.html\nNOTE: Introduced by: http://git.savannah.gnu.org/cgit/bash.git/commit/?id=bdf37a2d4f0f052ffd15d36de3b3a5d28f357000 (5.1)", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2015-8860", "package": "npm:tar", "purl": "pkg:npm/tar@4.4.19", "package_type": "npm", "package_usage": "N/A", "version": "4.4.19", "fix_version": "2.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Symlink Arbitrary File Overwrite in tar\nVersions of `tar` prior to 2.0.0 are affected by an arbitrary file write vulnerability. The vulnerability occurs because `tar` does not verify that extracted symbolic links to not resolve to targets outside of the extraction root directory.\n\n\n\n## Recommendation\n\nUpdate to version 2.0.0 or later", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2015-8860", "https://github.com/advisories/GHSA-gfjr-3jmm-4g9v", "https://github.com/npm/npm", "https://github.com/npm/npm/releases/tag/v2.7.5", "https://www.npmjs.com/advisories/57", "http://www.openwall.com/lists/oss-security/2016/04/20/11"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-23540", "package": "npm:jsonwebtoken", "purl": "pkg:npm/jsonwebtoken@8.5.1", "package_type": "npm", "package_usage": "N/A", "version": "8.5.1", "fix_version": "9.0.0", "severity": "MEDIUM", "cvss_score": "6.4", "short_description": "# jsonwebtoken vulnerable to signature validation bypass due to insecure default algorithm in jwt.verify()\n# Overview\n\nIn versions <=8.5.1 of jsonwebtoken library, lack of algorithm definition and a falsy secret or key in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification.\n\n# Am I affected?\nYou will be affected if all the following are true in the `jwt.verify()` function:\n- a token with no signature is received\n- no algorithms are specified \n- a falsy (e.g. null, false, undefined) secret or key is passed \n\n# How do I fix it?\n \nUpdate to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. \n\n# Will the fix impact my users?\n\nThere will be no impact, if you update to version 9.0.0 and you don\u2019t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.", "related_urls": ["https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6", "https://nvd.nist.gov/vuln/detail/CVE-2022-23540", "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3", "https://github.com/auth0/node-jsonwebtoken"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28834", "package": "suse:libgnutls30", "purl": "suse:libgnutls30", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "3.7.3-150400.4.44.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A flaw was found in GnuTLS. The Minerva attack is a cryptographic vulnerability that exploits deterministic behavior in systems like GnuTLS, leading to side-channel leaks. In specific scenarios, such as when using the GNUTLS_PRIVKEY_FLAG_REPRODUCIBLE flag, it can result in a noticeable step in nonce size from 513 to 512 bits, exposing a potential timing side-channel.", "related_urls": ["https://www.suse.com/security/cve/CVE-2024-28834.html", "https://bugzilla.suse.com/1221746"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28835", "package": "suse:libgnutls30", "purl": "suse:libgnutls30", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "3.7.3-150400.4.44.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A flaw has been discovered in GnuTLS where an application crash can be induced when attempting to verify a specially crafted .pem bundle using the \"certtool --verify-chain\" command.", "related_urls": ["https://www.suse.com/security/cve/CVE-2024-28835.html", "https://bugzilla.suse.com/1221747"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-0235", "package": "npm:node-fetch", "purl": "pkg:npm/node-fetch@2.3.0", "package_type": "npm", "package_usage": "N/A", "version": "2.3.0", "fix_version": "2.6.7", "severity": "HIGH", "cvss_score": "8.8", "short_description": "# node-fetch forwards secure headers to untrusted sites\nnode-fetch forwards secure headers such as `authorization`, `www-authenticate`, `cookie`, & `cookie2` when redirecting to a untrusted site.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2022-0235", "https://github.com/node-fetch/node-fetch/pull/1449/commits/5c32f002fdd65b1c6a8f1e3620210813d45c7e60", "https://github.com/node-fetch/node-fetch/pull/1453", "https://github.com/node-fetch/node-fetch/commit/1ef4b560a17e644a02a3bfdea7631ffeee578b35", "https://github.com/node-fetch/node-fetch/commit/36e47e8a6406185921e4985dcbeff140d73eaa10", "https://github.com/node-fetch/node-fetch/commit/5c32f002fdd65b1c6a8f1e3620210813d45c7e60", "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf", "https://github.com/node-fetch/node-fetch", "https://huntr.dev/bounties/d26ab655-38d6-48b3-be15-f9ad6b6ae6f7", "https://lists.debian.org/debian-lts-announce/2022/12/msg00007.html"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3995", "package": "suse:libsmartcols1", "purl": "suse:libsmartcols1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.36.2-150300.4.14.3", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows an unprivileged local attacker to unmount FUSE filesystems that belong to certain other users who have a UID that is a prefix of the UID of the attacker in its string form. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-3995.html", "https://bugzilla.suse.com/1194976"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3995", "package": "debian:util-linux", "purl": "debian:util-linux", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "2.37.3-1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A logic error was found in the libmount library of util-linux in the f ...\nNOTE: Introduced by: https://github.com/util-linux/util-linux/commit/5fea669e9ef0a08804f72bb40f859f239f68c30a (v2.34-rc1)\nNOTE: Fixed by: https://github.com/util-linux/util-linux/commit/f3db9bd609494099f0c1b95231c5dfe383346929 (v2.37.3)\nNOTE: https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/v2.37/v2.37.3-ReleaseNotes\nNOTE: https://www.openwall.com/lists/oss-security/2022/01/24/2", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2012-3404", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "The vfprintf function in stdio-common/vfprintf.c in libc in GNU C Library (aka glibc) 2.12 and other versions does not properly calculate a buffer length, which allows context-dependent attackers to bypass the FORTIFY_SOURCE format-string protection mechanism and cause a denial of service (stack corruption and crash) via a format string that uses positional parameters and many format specifiers.", "related_urls": ["https://www.suse.com/security/cve/CVE-2012-3404.html", "https://bugzilla.suse.com/770891"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-26920", "package": "npm:fast-xml-parser", "purl": "pkg:npm/fast-xml-parser@3.21.1", "package_type": "npm", "package_usage": "N/A", "version": "3.21.1", "fix_version": "4.1.2", "severity": "MEDIUM", "cvss_score": "6.5", "short_description": "# fast-xml-parser vulnerable to Prototype Pollution through tag or attribute name\n### Impact\nAs a part of this vulnerability, user was able to se code using `__proto__` as a tag or attribute name.\n\n```js\nconst { XMLParser, XMLBuilder, XMLValidator} = require(\"fast-xml-parser\");\n\nlet XMLdata = \"<__proto__><polluted>hacked</polluted></__proto__>\"\n\nconst parser = new XMLParser();\nlet jObj = parser.parse(XMLdata);\n\nconsole.log(jObj.polluted) // should return hacked\n``` \n\n### Patches\nThe problem has been patched in v4.1.2\n\n### Workarounds\nUser can check for \"__proto__\" in the XML string before parsing it to the parser.\n\n### References\nhttps://gist.github.com/Sudistark/a5a45bd0804d522a1392cb5023aa7ef7\n\n\n## Related CVE(s)\nCVE-2021-26920, CVE-2023-26920, GHSA-793h-6f7r-6qvm", "related_urls": ["https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-x3cc-x39p-42qx", "https://nvd.nist.gov/vuln/detail/CVE-2023-26920", "https://github.com/NaturalIntelligence/fast-xml-parser/commit/2b032a4f799c63d83991e4f992f1c68e4dd05804", "https://gist.github.com/Sudistark/a5a45bd0804d522a1392cb5023aa7ef7", "https://github.com/NaturalIntelligence/fast-xml-parser", "https://github.com/advisories/GHSA-793h-6f7r-6qvm"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-1271", "package": "debian:gzip", "purl": "debian:gzip", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "1.12-1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep ut ...\nNOTE: https://tukaani.org/xz/xzgrep-ZDI-CAN-16587.patch\nNOTE: https://git.tukaani.org/?p=xz.git;a=commit;h=69d1b3fc29677af8ade8dc15dba83f0589cb63d6\nNOTE: https://lists.gnu.org/r/bug-gzip/2022-04/msg00011.html\nNOTE: https://git.savannah.gnu.org/cgit/gzip.git/commit/?id=dc9740df61e575e8c3148b7bd3c147a81ea00c7c (v1.12)\nNOTE: https://git.savannah.gnu.org/cgit/gzip.git/commit/?id=d74a30d45c6834c8e9f87115197370fe86656d81 (v1.12)\nNOTE: https://git.savannah.gnu.org/cgit/gzip.git/commit/?id=c99f320d5c0fd98fe88d9cea5407eb7ad9d50e8a (v1.12)\nNOTE: https://git.savannah.gnu.org/cgit/gzip.git/commit/?id=6543c09c6ecfb1630085d440b76511953bc5a2cb (v1.12)\nNOTE: https://git.savannah.gnu.org/cgit/gzip.git/commit/?id=0e2d07fc2c4393cfb9dbab580d0bee4525b9c9b3 (v1.12)\nNOTE: https://git.savannah.gnu.org/cgit/gzip.git/commit/?id=5e1fc8b92c1af9382365aef0f9130341ee1d2c76 (v1.12)\nNOTE: Improves further the fix: https://git.savannah.gnu.org/cgit/gzip.git/commit/?id=9d3248751178939713a39115cf68ec8a11506cc9 (v1.12)\nNOTE: https://www.openwall.com/lists/oss-security/2022/04/07/8\nNOTE: https://www.zerodayinitiative.com/advisories/ZDI-22-619/", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-21485", "package": "pypi:dash", "purl": "pypi:dash", "package_type": "pypi", "package_usage": "N/A", "version": null, "fix_version": null, "severity": "MEDIUM", "cvss_score": "6.5", "short_description": "# Dash apps vulnerable to Cross-site Scripting\nVersions of the package dash-core-components before 2.13.0; versions of the package dash-core-components before 2.0.0; versions of the package dash before 2.15.0; versions of the package dash-html-components before 2.0.0; versions of the package dash-html-components before 2.0.16 are vulnerable to Cross-site Scripting (XSS) when the href of the a tag is controlled by an adversary. An authenticated attacker who stores a view that exploits this vulnerability could steal the data that's visible to another user who opens that view - not just the data already included on the page, but they could also, in theory, make additional requests and access other data accessible to this user. In some cases, they could also steal the access tokens of that user, which would allow the attacker to act as that user, including viewing other apps and resources hosted on the same server. \n\n**Note:** \n\nThis is only exploitable in Dash apps that include some mechanism to store user input to be reloaded by a different user.\n\n## Related CVE(s)\nCVE-2024-21485, PYSEC-2024-35", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2024-21485", "https://github.com/plotly/dash/issues/2729", "https://github.com/plotly/dash/pull/2732", "https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c", "https://github.com/plotly/dash", "https://github.com/plotly/dash/releases/tag/v2.15.0", "https://github.com/pypa/advisory-database/tree/main/vulns/dash/PYSEC-2024-35.yaml", "https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084", "https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337", "https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335", "https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334", "https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2016-10539", "package": "npm:negotiator", "purl": "pkg:npm/negotiator@0.3.0", "package_type": "npm", "package_usage": "N/A", "version": "0.3.0", "fix_version": "0.6.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in negotiator\nAffected versions of `negotiator` are vulnerable to regular expression denial of service attacks, which trigger upon parsing a specially crafted `Accept-Language` header value.\n\n\n\n\n## Recommendation\n\nUpdate to version 0.6.1 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2016-10539", "https://github.com/advisories/GHSA-7mc5-chhp-fmc3", "https://www.npmjs.com/advisories/106"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-44270", "package": "npm:postcss", "purl": "pkg:npm/postcss@8.4.21", "package_type": "npm", "package_usage": "N/A", "version": "8.4.21", "fix_version": "8.4.31", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# PostCSS line return parsing error\nAn issue was discovered in PostCSS before 8.4.31. It affects linters using PostCSS to parse external Cascading Style Sheets (CSS). There may be `\r` discrepancies, as demonstrated by `@font-face{ font:(\r/*);}` in a rule.\n\nThis vulnerability affects linters using PostCSS to parse external untrusted CSS. An attacker can prepare CSS in such a way that it will contains parts parsed by PostCSS as a CSS comment. After processing by PostCSS, it will be included in the PostCSS output in CSS nodes (rules, properties) despite being originally included in a comment.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2023-44270", "https://github.com/github/advisory-database/issues/2820", "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5", "https://github.com/postcss/postcss", "https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25", "https://github.com/postcss/postcss/releases/tag/8.4.31"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2015-0235", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "Heap-based buffer overflow in the __nss_hostname_digits_dots function in glibc 2.2, and other 2.x versions before 2.18, allows context-dependent attackers to execute arbitrary code via vectors related to the (1) gethostbyname or (2) gethostbyname2 function, aka \"GHOST.\"", "related_urls": ["https://www.suse.com/security/cve/CVE-2015-0235.html", "https://bugzilla.suse.com/844309", "https://bugzilla.suse.com/913646", "https://bugzilla.suse.com/949238", "https://bugzilla.suse.com/954983"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-0122", "package": "npm:node-forge", "purl": "pkg:npm/node-forge@0.7.6", "package_type": "npm", "package_usage": "N/A", "version": "0.7.6", "fix_version": "1.3.0", "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "# Open Redirect in node-forge\nparseUrl functionality in node-forge mishandles certain uses of backslash such as `https:/\\/\\/\\` and interprets the URI as a relative path.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2022-0122", "https://github.com/digitalbazaar/forge/commit/db8016c805371e72b06d8e2edfe0ace0df934a5e", "https://github.com/digitalbazaar/forge", "https://huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-0361", "package": "suse:libgnutls30", "purl": "suse:libgnutls30", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "3.7.3-150400.1.3.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A timing side-channel in the handling of RSA ClientKeyExchange messages was discovered in GnuTLS. This side-channel can be sufficient to recover the key encrypted in the RSA ciphertext across a network in a Bleichenbacher style attack. To achieve a successful decryption the attacker would need to send a large amount of specially crafted messages to the vulnerable server. By recovering the secret from the ClientKeyExchange message, the attacker would be able to decrypt the application data exchanged over that connection.", "related_urls": ["https://www.suse.com/security/cve/CVE-2023-0361.html", "https://bugzilla.suse.com/1208143"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-5981", "package": "suse:libgnutls30", "purl": "suse:libgnutls30", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "3.7.3-150400.1.3.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A vulnerability was found that the response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from response times of ciphertexts with correct PKCS#1 v1.5 padding.", "related_urls": ["https://www.suse.com/security/cve/CVE-2023-5981.html", "https://bugzilla.suse.com/1217277", "https://bugzilla.suse.com/1218865"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-0553", "package": "suse:libgnutls30", "purl": "suse:libgnutls30", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "3.7.3-150400.1.3.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A vulnerability was found in GnuTLS. The response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from the response times of ciphertexts with correct PKCS#1 v1.5 padding. This issue may allow a remote attacker to perform a timing side-channel attack in the RSA-PSK key exchange, potentially leading to the leakage of sensitive data. CVE-2024-0553 is designated as an incomplete resolution for CVE-2023-5981.", "related_urls": ["https://www.suse.com/security/cve/CVE-2024-0553.html", "https://bugzilla.suse.com/1218865"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-0567", "package": "suse:libgnutls30", "purl": "suse:libgnutls30", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "3.7.3-150400.1.3.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A vulnerability was found in GnuTLS, where a cockpit (which uses gnuTLS) rejects a certificate chain with distributed trust. This issue occurs when validating a certificate chain with cockpit-certificate-ensure. This flaw allows an unauthenticated, remote client or attacker to initiate a denial of service attack.", "related_urls": ["https://www.suse.com/security/cve/CVE-2024-0567.html", "https://bugzilla.suse.com/1218862"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2013-4357", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "The eglibc package before 2.14 incorrectly handled the getaddrinfo() function. An attacker could use this issue to cause a denial of service.", "related_urls": ["https://www.suse.com/security/cve/CVE-2013-4357.html", "https://bugzilla.suse.com/844309", "https://bugzilla.suse.com/883217", "https://bugzilla.suse.com/903057"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28085", "package": "suse:libsmartcols1", "purl": "suse:libsmartcols1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.37.2-150400.8.29.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.", "related_urls": ["https://www.suse.com/security/cve/CVE-2024-28085.html", "https://bugzilla.suse.com/1221831"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2014-7817", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "The wordexp function in GNU C Library (aka glibc) 2.21 does not enforce the WRDE_NOCMD flag, which allows context-dependent attackers to execute arbitrary commands, as demonstrated by input containing \"$((`...`))\".", "related_urls": ["https://www.suse.com/security/cve/CVE-2014-7817.html", "https://bugzilla.suse.com/906371"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "GHSA-36jr-mh4h-2g58", "package": "npm:d3-color", "purl": "pkg:npm/d3-color@2.0.0", "package_type": "npm", "package_usage": "N/A", "version": "2.0.0", "fix_version": "3.1.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# d3-color vulnerable to ReDoS\nThe d3-color module provides representations for various color spaces in the browser. Versions prior to 3.1.0 are vulnerable to a Regular expression Denial of Service. This issue has been patched in version 3.1.0. There are no known workarounds.", "related_urls": ["https://github.com/d3/d3-color/pull/100", "https://github.com/d3/d3-color", "https://github.com/d3/d3-color/releases/tag/v3.1.0", "https://security.snyk.io/vuln/SNYK-JS-D3COLOR-1076592"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "GHSA-9h6g-pr28-7cqp", "package": "npm:nodemailer", "purl": "pkg:npm/nodemailer@6.6.3", "package_type": "npm", "package_usage": "N/A", "version": "6.6.3", "fix_version": "6.9.9", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# nodemailer ReDoS when trying to send a specially crafted email\n### Summary\nA ReDoS vulnerability occurs when nodemailer tries to parse img files with the parameter `attachDataUrls` set, causing the stuck of event loop. \nAnother flaw was found when nodemailer tries to parse an attachments with a embedded file, causing the stuck of event loop. \n\n### Details\n\nRegex: /^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/\n\nPath: compile -> getAttachments -> _processDataUrl\n\nRegex: /(<img\b[^>]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'>\\s]+)/\n\nPath: _convertDataImages\n\n### PoC\n\nhttps://gist.github.com/francoatmega/890dd5053375333e40c6fdbcc8c58df6\nhttps://gist.github.com/francoatmega/9aab042b0b24968d7b7039818e8b2698\n\n### Impact\n\nReDoS causes the event loop to stuck a specially crafted evil email can cause this problem.", "related_urls": ["https://github.com/nodemailer/nodemailer/security/advisories/GHSA-9h6g-pr28-7cqp", "https://github.com/nodemailer/nodemailer/commit/dd8f5e8a4ddc99992e31df76bcff9c590035cd4a", "https://gist.github.com/francoatmega/890dd5053375333e40c6fdbcc8c58df6", "https://gist.github.com/francoatmega/9aab042b0b24968d7b7039818e8b2698", "https://github.com/nodemailer/nodemailer"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2019-18276", "package": "debian:bash", "purl": "debian:bash", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "5.1~rc1-2", "severity": "LOW", "cvss_score": "2.0", "short_description": "An issue was discovered in disable_priv_mode in shell.c in GNU Bash th ...\nNOTE: https://git.savannah.gnu.org/cgit/bash.git/commit/?h=devel&id=951bdaad7a18cc0dc1036bba86b18b90874d39ff\nNOTE: https://savannah.gnu.org/patch/?9822\nNOTE: https://bugzilla.suse.com/show_bug.cgi?id=1158028\nNOTE: Negligible security impact", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2017-16119", "package": "npm:fresh", "purl": "pkg:npm/fresh@0.2.0", "package_type": "npm", "package_usage": "N/A", "version": "0.2.0", "fix_version": "0.5.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in fresh\nAffected versions of `fresh` are vulnerable to regular expression denial of service when parsing specially crafted user input.\n\n\n## Recommendation\n\nUpdate to version 0.5.2 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2017-16119", "https://github.com/advisories/GHSA-9qj9-36jm-prpv", "https://www.npmjs.com/advisories/526"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3995", "package": "suse:libmount1", "purl": "suse:libmount1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.36.2-150300.4.14.3", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows an unprivileged local attacker to unmount FUSE filesystems that belong to certain other users who have a UID that is a prefix of the UID of the attacker in its string form. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-3995.html", "https://bugzilla.suse.com/1194976"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28085", "package": "debian:util-linux", "purl": "debian:util-linux", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "2.39.3-11", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "wall in util-linux through 2.40, often installed with setgid tty permi ...\nNOTE: https://www.openwall.com/lists/oss-security/2024/03/27/5\nNOTE: https://github.com/util-linux/util-linux/commit/404b0781f52f7c045ca811b2dceec526408ac253 (v2.40)", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "MAL-2022-6280", "package": "npm:ss2", "purl": "npm:ss2", "package_type": "npm", "package_usage": "N/A", "version": null, "fix_version": null, "severity": "LOW", "cvss_score": "2.0", "short_description": "# Malicious code in ss2 (npm)\n\n---\n_-= Per source details. Do not edit below this line.=-_\n\n## Source: ghsa-malware (2437321e4b5e0de0740b6c2539011e629dc45486c7ac3c94bd901d613c1d2c32)\nAny computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer. The package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.", "related_urls": ["https://github.com/advisories/GHSA-jm6m-3w2v-7q2q"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3996", "package": "suse:libuuid1", "purl": "suse:libuuid1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.36.2-150300.4.14.3", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows a local user on a vulnerable system to unmount other users' filesystems that are either world-writable themselves (like /tmp) or mounted in a world-writable directory. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-3996.html", "https://bugzilla.suse.com/1194976"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "GHSA-5rrq-pxf6-6jx5", "package": "npm:node-forge", "purl": "pkg:npm/node-forge@0.7.6", "package_type": "npm", "package_usage": "N/A", "version": "0.7.6", "fix_version": "1.3.0", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Prototype Pollution in node-forge debug API.\n### Impact\nThe `forge.debug` API had a potential prototype pollution issue if called with untrusted input. The API was only used for internal debug purposes in a safe way and never documented or advertised.\tIt is suspected that uses of this API, if any exist, would likely not have used untrusted inputs in a vulnerable way.\n\n### Patches\nThe `forge.debug` API and related functions were removed in 1.0.0.\n\n### Workarounds\nDon't use the `forge.debug` API directly or indirectly with untrusted input.\n\n### References\n- https://www.huntr.dev/bounties/1-npm-node-forge/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge).\n* Email us at support@digitalbazaar.com.", "related_urls": ["https://github.com/digitalbazaar/forge/security/advisories/GHSA-5rrq-pxf6-6jx5", "https://github.com/digitalbazaar/forge"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "GHSA-j4mr-9xw3-c9jx", "package": "npm:base64-url", "purl": "pkg:npm/base64-url@1.2.1", "package_type": "npm", "package_usage": "N/A", "version": "1.2.1", "fix_version": "2.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Out-of-bounds Read in base64-url\nVersions of `base64-url` before 2.0.0 are vulnerable to out-of-bounds read as it allocates uninitialized Buffers when number is passed in input.\n\n\n## Recommendation\n\nUpdate to version 2.0.0 or later.", "related_urls": ["https://hackerone.com/reports/321692", "https://www.npmjs.com/advisories/660"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-23541", "package": "npm:jsonwebtoken", "purl": "pkg:npm/jsonwebtoken@8.5.1", "package_type": "npm", "package_usage": "N/A", "version": "8.5.1", "fix_version": "9.0.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# jsonwebtoken's insecure implementation of key retrieval function could lead to Forgeable Public/Private Tokens from RSA to HMAC\n# Overview\n\nVersions `<=8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function (referring to the `secretOrPublicKey` argument from the [readme link](https://github.com/auth0/node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback)) will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification\tthan the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of forged tokens. \n\n# Am I affected?\n\nYou will be affected if your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. \n\n# How do I fix it?\n \nUpdate to version 9.0.0.\n\n# Will the fix impact my users?\n\nThere is no impact for end users", "related_urls": ["https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959", "https://nvd.nist.gov/vuln/detail/CVE-2022-23541", "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3", "https://github.com/auth0/node-jsonwebtoken", "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2014-10064", "package": "npm:qs", "purl": "pkg:npm/qs@0.6.6", "package_type": "npm", "package_usage": "N/A", "version": "0.6.6", "fix_version": "1.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Denial-of-Service Extended Event Loop Blocking in qs\nVersions prior to 1.0.0 of `qs` are affected by a denial of service vulnerability that results from excessive recursion in parsing a deeply nested JSON string.\n\n\n\n\n## Recommendation\n\nUpdate to version 1.0.0 or later", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2014-10064", "https://github.com/advisories/GHSA-f9cm-p3w6-xvr3", "https://www.npmjs.com/advisories/28"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2013-4788", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "The PTR_MANGLE implementation in the GNU C Library (aka glibc or libc6) 2.4, 2.17, and earlier, and Embedded GLIBC (EGLIBC) does not initialize the random value for the pointer guard, which makes it easier for context-dependent attackers to control execution flow by leveraging a buffer-overflow vulnerability in an application and using the known zero value pointer guard to calculate a pointer address.", "related_urls": ["https://www.suse.com/security/cve/CVE-2013-4788.html", "https://bugzilla.suse.com/1123874", "https://bugzilla.suse.com/830268", "https://bugzilla.suse.com/882910", "https://bugzilla.suse.com/950944"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28085", "package": "suse:libmount1", "purl": "suse:libmount1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.37.2-150400.8.29.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.", "related_urls": ["https://www.suse.com/security/cve/CVE-2024-28085.html", "https://bugzilla.suse.com/1221831"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2012-0864", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "Integer overflow in the vfprintf function in stdio-common/vfprintf.c in glibc 2.14 and other versions allows context-dependent attackers to bypass the FORTIFY_SOURCE protection mechanism, conduct format string attacks, and write to arbitrary memory via a large number of arguments.", "related_urls": ["https://www.suse.com/security/cve/CVE-2012-0864.html", "https://bugzilla.suse.com/747768", "https://bugzilla.suse.com/826666"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2013-4237", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "sysdeps/posix/readdir_r.c in the GNU C Library (aka glibc or libc6) 2.18 and earlier allows context-dependent attackers to cause a denial of service (out-of-bounds write and crash) or possibly execute arbitrary code via a crafted (1) NTFS or (2) CIFS image.", "related_urls": ["https://www.suse.com/security/cve/CVE-2013-4237.html", "https://bugzilla.suse.com/834594", "https://bugzilla.suse.com/882910", "https://bugzilla.suse.com/883022"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2014-6394", "package": "npm:send", "purl": "pkg:npm/send@0.1.4", "package_type": "npm", "package_usage": "N/A", "version": "0.1.4", "fix_version": "0.11.1", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Directory Traversal in send\nVersions 0.8.3 and earlier of `send` are affected by a directory traversal vulnerability. When relying on the root option to restrict file access it may be possible for an application consumer to escape out of the restricted directory and access files in a similarly named directory. \n\nFor example, `static(_dirname + '/public')` would allow access to `_dirname + '/public-restricted'`.\n\n\n## Recommendation\n\nUpdate to version 0.8.4 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2014-6394", "https://github.com/visionmedia/send/pull/59", "https://github.com/visionmedia/send/commit/9c6ca9b2c0b880afd3ff91ce0d211213c5fa5f9a", "https://bugzilla.redhat.com/show_bug.cgi?id=1146063", "https://exchange.xforce.ibmcloud.com/vulnerabilities/96727", "https://github.com/advisories/GHSA-xwg4-93c6-3h42", "https://github.com/visionmedia/send", "https://support.apple.com/HT205217", "https://www.npmjs.com/advisories/32", "http://lists.apple.com/archives/security-announce/2015/Sep/msg00002.html", "http://lists.fedoraproject.org/pipermail/package-announce/2014-October/139938.html", "http://lists.fedoraproject.org/pipermail/package-announce/2014-October/140020.html", "http://lists.fedoraproject.org/pipermail/package-announce/2014-September/139415.html", "http://secunia.com/advisories/62170", "http://www-01.ibm.com/support/docview.wss?uid=swg21687263", "http://www.openwall.com/lists/oss-security/2014/09/24/1", "http://www.openwall.com/lists/oss-security/2014/09/30/10", "http://www.securityfocus.com/bid/70100"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2018-3717", "package": "npm:connect", "purl": "pkg:npm/connect@2.12.0", "package_type": "npm", "package_usage": "N/A", "version": "2.12.0", "fix_version": "2.14.0", "severity": "MEDIUM", "cvss_score": "5.4", "short_description": "# Cross-Site Scripting in connect\nconnect node module before 2.14.0 suffers from a Cross-Site Scripting (XSS) vulnerability due to a lack of validation of file in directory.js middleware.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2018-3717", "https://github.com/JacksonTian/anywhere/issues/33#issuecomment-366527448", "https://github.com/senchalabs/connect/commit/6d5dd30075d2bc4ee97afdbbe3d9d98d8d52d74b", "https://hackerone.com/reports/309394", "https://hackerone.com/reports/309641", "https://github.com/advisories/GHSA-rch9-xh7r-mqgw", "https://www.npmjs.com/advisories/584", "https://www.npmjs.com/advisories/595"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-46848", "package": "debian:libtasn1-6", "purl": "debian:libtasn1-6", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "4.19.0-2", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "GNU Libtasn1 before 4.19.0 has an ETYPE_OK off-by-one array size check ...\nNOTE: https://gitlab.com/gnutls/libtasn1/-/commit/44a700d2051a666235748970c2df047ff207aeb5 (v4.19.0)\nNOTE: https://gitlab.com/gnutls/libtasn1/-/issues/32", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2017-20165", "package": "npm:debug", "purl": "pkg:npm/debug@0.8.1", "package_type": "npm", "package_usage": "N/A", "version": "0.8.1", "fix_version": "2.6.9", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# debug Inefficient Regular Expression Complexity vulnerability\nA vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2017-20165", "https://github.com/debug-js/debug/pull/504", "https://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685", "https://github.com/debug-js/debug/commit/f53962e944a87e6ca9bb622a2a12dffc22a9bb5a", "https://github.com/debug-js/debug", "https://github.com/debug-js/debug/releases/tag/2.6.9", "https://github.com/debug-js/debug/releases/tag/3.1.0", "https://vuldb.com/?ctiid.217665", "https://vuldb.com/?id.217665"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2014-5119", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "Off-by-one error in the __gconv_translit_find function in gconv_trans.c in GNU C Library (aka glibc) allows context-dependent attackers to cause a denial of service (crash) or execute arbitrary code via vectors related to the CHARSET environment variable and gconv transliteration modules.", "related_urls": ["https://www.suse.com/security/cve/CVE-2014-5119.html", "https://bugzilla.suse.com/892073", "https://bugzilla.suse.com/903057", "https://bugzilla.suse.com/916222"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-15168", "package": "npm:node-fetch", "purl": "pkg:npm/node-fetch@2.3.0", "package_type": "npm", "package_usage": "N/A", "version": "2.3.0", "fix_version": "2.6.7", "severity": "LOW", "cvss_score": "2.6", "short_description": "# The `size` option isn't honored after following a redirect in node-fetch\n### Impact\nNode Fetch did not honor the `size` option after following a redirect, which means that when a content size was over the limit, a `FetchError` would never get thrown and the process would end without failure.\n\nFor most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after `fetch()` has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.\n\n### Patches\nWe released patched versions for both stable and beta channels:\n\n- For `v2`: 2.6.1\n- For `v3`: 3.0.0-beta.9\n\n### Workarounds\nNone, it is strongly recommended to update as soon as possible.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [node-fetch](https://github.com/node-fetch/node-fetch/issues/new?assignees=&labels=question&template=support-or-usage.md&title=Question%3A+)\n* Contact one of the core maintainers.", "related_urls": ["https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r", "https://nvd.nist.gov/vuln/detail/CVE-2020-15168", "https://github.com/node-fetch/node-fetch/commit/2358a6c2563d1730a0cdaccc197c611949f6a334", "https://github.com/node-fetch/node-fetch/commit/eaff0094c4dfdd5b78711a8c4f1b61e33d282072", "https://github.com/node-fetch/node-fetch"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2017-1000048", "package": "npm:qs", "purl": "pkg:npm/qs@0.6.6", "package_type": "npm", "package_usage": "N/A", "version": "0.6.6", "fix_version": "6.2.4", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Prototype Pollution Protection Bypass in qs\nAffected version of `qs` are vulnerable to Prototype Pollution because it is possible to bypass the protection. The `qs.parse` function fails to properly prevent an object's prototype to be altered when parsing arbitrary input. Input containing `[` or `]` may bypass the prototype pollution protection and alter the Object prototype. This allows attackers to override properties that will exist in all objects, which may lead to Denial of Service or Remote Code Execution in specific circumstances.\n\n\n## Recommendation\n\nUpgrade to 6.0.4, 6.1.2, 6.2.3, 6.3.2 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2017-1000048", "https://github.com/ljharb/qs/issues/200", "https://github.com/ljharb/qs/commit/beade029171b8cef9cee0d03ebe577e2dd84976d", "https://access.redhat.com/errata/RHSA-2017:2672", "https://github.com/ljharb/qs", "https://snyk.io/vuln/npm:qs:20170213", "https://www.npmjs.com/advisories/1469"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-20291", "package": "suse:libseccomp2", "purl": "suse:libseccomp2", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.5.3-150300.10.5.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A deadlock vulnerability was found in 'github.com/containers/storage' in versions before 1.28.1. When a container image is processed, each layer is unpacked using `tar`. If one of those layers is not a valid `tar` archive this causes an error leading to an unexpected situation where the code indefinitely waits for the tar unpacked stream, which never finishes. An attacker could use this vulnerability to craft a malicious image, which when downloaded and stored by an application using containers/storage, would then cause a deadlock leading to a Denial of Service (DoS).", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-20291.html", "https://bugzilla.suse.com/1196497"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3602", "package": "suse:libseccomp2", "purl": "suse:libseccomp2", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.5.3-150300.10.5.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "An information disclosure flaw was found in Buildah, when building containers using chroot isolation. Running processes in container builds (e.g. Dockerfile RUN commands) can access environment variables from parent and grandparent processes. When run in a container in a CI/CD environment, environment variables may include sensitive information that was shared with the container in order to be used only by Buildah itself (e.g. container registry credentials).", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-3602.html", "https://bugzilla.suse.com/1188520"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-4024", "package": "suse:libseccomp2", "purl": "suse:libseccomp2", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.5.3-150300.10.5.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A flaw was found in podman. The `podman machine` function (used to create and manage Podman virtual machine containing a Podman process) spawns a `gvproxy` process on the host system. The `gvproxy` API is accessible on port 7777 on all IP addresses on the host. If that port is open on the host's firewall, an attacker can potentially use the `gvproxy` API to forward ports on the host to ports in the VM, making private services on the VM accessible to the network. This issue could be also used to interrupt the host's services by forwarding all ports to the VM.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-4024.html", "https://bugzilla.suse.com/1193166"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-41190", "package": "suse:libseccomp2", "purl": "suse:libseccomp2", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.5.3-150300.10.5.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "The OCI Distribution Spec project defines an API protocol to facilitate and standardize the distribution of content. In the OCI Distribution Specification version 1.0.0 and prior, the Content-Type header alone was used to determine the type of document during push and pull operations. Documents that contain both \u201cmanifests\u201d and \u201clayers\u201d fields could be interpreted as either a manifest or an index in the absence of an accompanying Content-Type header. If a Content-Type header changed between two pulls of the same digest, a client may interpret the resulting content differently. The OCI Distribution Specification has been updated to require that a mediaType value present in a manifest or index match the Content-Type header used during the push and pull operations. Clients pulling from a registry may distrust the Content-Type header and reject an ambiguous document that contains both \u201cmanifests\u201d and \u201clayers\u201d fields or \u201cmanifests\u201d and \u201cconfig\u201d fields if they are unable to update to version 1.0.1 of the spec.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-41190.html", "https://bugzilla.suse.com/1193273"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-14370", "package": "suse:libseccomp2", "purl": "suse:libseccomp2", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.5.3-150300.10.5.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "An information disclosure vulnerability was found in containers/podman in versions before 2.0.5. When using the deprecated Varlink API or the Docker-compatible REST API, if multiple containers are created in a short duration, the environment variables from the first container will get leaked into subsequent containers. An attacker who has control over the subsequent containers could use this flaw to gain access to sensitive information stored in such variables.", "related_urls": ["https://www.suse.com/security/cve/CVE-2020-14370.html", "https://bugzilla.suse.com/1176804"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-15157", "package": "suse:libseccomp2", "purl": "suse:libseccomp2", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.5.3-150300.10.5.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "In containerd (an industry-standard container runtime) before version 1.2.14 there is a credential leaking vulnerability. If a container image manifest in the OCI Image format or Docker Image V2 Schema 2 format includes a URL for the location of a specific image layer (otherwise known as a \u201cforeign layer\u201d), the default containerd resolver will follow that URL to attempt to download it. In v1.2.x but not 1.3.0 or later, the default containerd resolver will provide its authentication credentials if the server where the URL is located presents an HTTP 401 status code along with registry-specific HTTP headers. If an attacker publishes a public image with a manifest that directs one of the layers to be fetched from a web server they control and they trick a user or system into pulling the image, they can obtain the credentials used for pulling that image. In some cases, this may be the user's username and password for the registry. In other cases, this may be the credentials attached to the cloud virtual instance which can grant access to other cloud resources in the account. The default containerd resolver is used by the cri-containerd plugin (which can be used by Kubernetes), the ctr development tool, and other client programs that have explicitly linked against it. This vulnerability has been fixed in containerd 1.2.14. containerd 1.3 and later are not affected. If you are using containerd 1.3 or later, you are not affected. If you are using cri-containerd in the 1.2 series or prior, you should ensure you only pull images from trusted sources. Other container runtimes built on top of containerd but not using the default resolver (such as Docker) are not affected.", "related_urls": ["https://www.suse.com/security/cve/CVE-2020-15157.html", "https://bugzilla.suse.com/1177598"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-20199", "package": "suse:libseccomp2", "purl": "suse:libseccomp2", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.5.3-150300.10.5.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "Rootless containers run with Podman, receive all traffic with a source IP address of 127.0.0.1 (including from remote hosts). This impacts containerized applications that trust localhost (127.0.01) connections by default and do not require authentication. This issue affects Podman 1.8.0 onwards.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-20199.html", "https://bugzilla.suse.com/1181640"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3996", "package": "debian:util-linux", "purl": "debian:util-linux", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "2.37.3-1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A logic error was found in the libmount library of util-linux in the f ...\nNOTE: Introduced by: https://github.com/util-linux/util-linux/commit/5fea669e9ef0a08804f72bb40f859f239f68c30a (v2.34-rc1)\nNOTE: Fixed by: https://github.com/util-linux/util-linux/commit/018a10907fa9885093f6d87401556932c2d8bd2b (v2.37.3)\nNOTE: https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/v2.37/v2.37.3-ReleaseNotes\nNOTE: https://www.openwall.com/lists/oss-security/2022/01/24/2", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-23539", "package": "npm:jsonwebtoken", "purl": "pkg:npm/jsonwebtoken@8.5.1", "package_type": "npm", "package_usage": "N/A", "version": "8.5.1", "fix_version": "9.0.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# jsonwebtoken unrestricted key type could lead to legacy keys usage \n# Overview\n\nVersions `<=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. \n\n# Am I affected?\n\nYou are affected if you are using an algorithm and a key type other than the combinations mentioned below\n\n| Key type |\talgorithm\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n|----------|------------------------------------------|\n| ec\t\t\t\t\t | ES256, ES384, ES512\t\t\t\t\t\t\t\t\t\t\t|\n| rsa\t\t\t\t\t| RS256, RS384, RS512, PS256, PS384, PS512 |\n| rsa-pss\t| PS256, PS384, PS512\t\t\t\t\t\t\t\t\t\t\t|\n\nAnd for Elliptic Curve algorithms:\n\n| `alg` | Curve\t\t\t|\n|-------|------------|\n| ES256 | prime256v1 |\n| ES384 | secp384r1\t|\n| ES512 | secp521r1\t|\n\n# How do I fix it?\n\nUpdate to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, If you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you\u2019ll need to set the `allowInvalidAsymmetricKeyTypes` option\tto `true` in the `sign()` and/or `verify()` functions.\n\n# Will the fix impact my users?\n\nThere will be no impact, if you update to version 9.0.0 and you already use a valid secure combination of key type and algorithm. Otherwise,\tuse the\t`allowInvalidAsymmetricKeyTypes` option\tto `true` in the `sign()` and `verify()` functions to continue usage of invalid key type/algorithm combination in 9.0.0 for legacy compatibility.", "related_urls": ["https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33", "https://nvd.nist.gov/vuln/detail/CVE-2022-23539", "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3", "https://github.com/auth0/node-jsonwebtoken"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3995", "package": "amazon:libmount", "purl": "amazon:libmount", "package_type": "amazon", "package_usage": "N/A", "version": null, "fix_version": "2.37.4", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "Package updates are available for Amazon Linux 2022 that fix the following vulnerabilities:\nCVE-2021-3996:\n\tA logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows a local user on a vulnerable system to unmount other users' filesystems that are either world-writable themselves (like /tmp) or mounted in a world-writable directory. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.\n\nCVE-2021-3995:\n\tA logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows an unprivileged local attacker to unmount FUSE filesystems that belong to certain other users who have a UID that is a prefix of the UID of the attacker in its string form. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.", "related_urls": ["http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3995", "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3996"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-23337", "package": "npm:lodash", "purl": "pkg:npm/lodash@4.17.19", "package_type": "npm", "package_usage": "N/A", "version": "4.17.19", "fix_version": "4.17.21", "severity": "HIGH", "cvss_score": "7.2", "short_description": "# Command Injection in lodash\n`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.\n\n## Related CVE(s)\nCVE-2021-23337, SNYK-JAVA-ORGFUJIONWEBJARS-1074932, SNYK-JAVA-ORGWEBJARS-1074930, SNYK-JAVA-ORGWEBJARSBOWER-1074928, SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074931, SNYK-JAVA-ORGWEBJARSNPM-1074929, SNYK-JS-LODASH-1040724", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-23337", "https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c", "https://www.oracle.com/security-alerts/cpuoct2021.html", "https://www.oracle.com/security-alerts/cpujul2022.html", "https://www.oracle.com/security-alerts/cpujan2022.html", "https://www.oracle.com//security-alerts/cpujul2021.html", "https://snyk.io/vuln/SNYK-JS-LODASH-1040724", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074929", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074931", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074928", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074930", "https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074932", "https://security.netapp.com/advisory/ntap-20210312-0006", "https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js%23L14851", "https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js#L14851", "https://github.com/lodash/lodash", "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28085", "package": "suse:libblkid1", "purl": "suse:libblkid1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.37.2-150400.8.29.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.", "related_urls": ["https://www.suse.com/security/cve/CVE-2024-28085.html", "https://bugzilla.suse.com/1221831"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-45133", "package": "@babel:traverse", "purl": "@babel:traverse", "package_type": "@babel", "package_usage": "N/A", "version": ">=0-<7.23.2", "fix_version": "7.23.2", "severity": "CRITICAL", "cvss_score": "9.3", "short_description": "# Babel vulnerable to arbitrary code execution when compiling specifically crafted malicious code\n### Impact\n\nUsing Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods.\n\nKnown affected plugins are:\n- `@babel/plugin-transform-runtime`\n- `@babel/preset-env` when using its [`useBuiltIns`](https://babeljs.io/docs/babel-preset-env#usebuiltins) option\n- Any \"polyfill provider\" plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`\n\nNo other plugins under the `@babel/` namespace are impacted, but third-party plugins might be.\n\n**Users that only compile trusted code are not impacted.**\n\n### Patches\n\nThe vulnerability has been fixed in `@babel/traverse@7.23.2`.\n\nBabel 6 does not receive security fixes anymore (see [Babel's security policy](https://github.com/babel/babel/security/policy)), hence there is no patch planned for `babel-traverse@6`.\n\n### Workarounds\n\n- Upgrade `@babel/traverse` to v7.23.2 or higher. You can do this by deleting it from your package manager's lockfile and re-installing the dependencies. `@babel/core` >=7.23.2 will automatically pull in a non-vulnerable version.\n- If you cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above, upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions:\n\t- `@babel/plugin-transform-runtime` v7.23.2\n\t- `@babel/preset-env` v7.23.2\n\t- `@babel/helper-define-polyfill-provider` v0.4.3\n\t- `babel-plugin-polyfill-corejs2` v0.4.6\n\t- `babel-plugin-polyfill-corejs3` v0.8.5\n\t- `babel-plugin-polyfill-es-shims` v0.10.0\n\t- `babel-plugin-polyfill-regenerator` v0.5.3", "related_urls": ["https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92", "https://nvd.nist.gov/vuln/detail/CVE-2023-45133", "https://github.com/babel/babel/pull/16033", "https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82", "https://babeljs.io/blog/2023/10/16/cve-2023-45133", "https://github.com/babel/babel", "https://github.com/babel/babel/releases/tag/v7.23.2", "https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4", "https://lists.debian.org/debian-lts-announce/2023/10/msg00026.html", "https://www.debian.org/security/2023/dsa-5528"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "MAL-2022-4691", "package": "npm:monorepo-symlink-test", "purl": "pkg:npm/monorepo-symlink-test@0.0.0", "package_type": "npm", "package_usage": "N/A", "version": "0.0.0", "fix_version": null, "severity": "LOW", "cvss_score": "2.0", "short_description": "# Malicious code in monorepo-symlink-test (npm)\n\n---\n_-= Per source details. Do not edit below this line.=-_\n\n## Source: ghsa-malware (85ce41560ca4bda849205f0e30456947dd54daec43938385934ce240e45546a7)\nAny computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer. The package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.", "related_urls": ["https://github.com/advisories/GHSA-2jcg-qqmg-46q6"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2013-1914", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "Stack-based buffer overflow in the getaddrinfo function in sysdeps/posix/getaddrinfo.c in GNU C Library (aka glibc or libc6) 2.17 and earlier allows remote attackers to cause a denial of service (crash) via a (1) hostname or (2) IP address that triggers a large number of domain conversion results.", "related_urls": ["https://www.suse.com/security/cve/CVE-2013-1914.html", "https://bugzilla.suse.com/813121", "https://bugzilla.suse.com/826666", "https://bugzilla.suse.com/882910", "https://bugzilla.suse.com/941444"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-2509", "package": "suse:libgnutls30", "purl": "suse:libgnutls30", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "3.7.3-150400.4.10.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "A vulnerability found in gnutls. This security flaw happens because of a double free error occurs during verification of pkcs7 signatures in gnutls_pkcs7_verify function.", "related_urls": ["https://www.suse.com/security/cve/CVE-2022-2509.html", "https://bugzilla.suse.com/1202020", "https://bugzilla.suse.com/1202593"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "DSA-5650-1", "package": "debian:debian-11/util-linux", "purl": "debian:debian-11/util-linux", "package_type": "debian", "package_usage": "N/A", "version": ">=0-<2.36.1-8+deb11u2", "fix_version": "2.36.1-8+deb11u2", "severity": "LOW", "cvss_score": "2.0", "short_description": "# util-linux - security update", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-10696", "package": "suse:libgpg-error0", "purl": "suse:libgpg-error0", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "1.42-150300.9.3.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "A path traversal flaw was found in Buildah in versions before 1.14.5. This flaw allows an attacker to trick a user into building a malicious container image hosted on an HTTP(s) server and then write files to the user's system anywhere that the user has permissions.", "related_urls": ["https://www.suse.com/security/cve/CVE-2020-10696.html", "https://bugzilla.suse.com/1167864"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-20206", "package": "suse:libgpg-error0", "purl": "suse:libgpg-error0", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "1.42-150300.9.3.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "An improper limitation of path name flaw was found in containernetworking/cni in versions before 0.8.1. When specifying the plugin to load in the 'type' field in the network configuration, it is possible to use special elements such as \"../\" separators to reference binaries elsewhere on the system. This flaw allows an attacker to execute other existing binaries other than the cni plugins/types, such as 'reboot'. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-20206.html", "https://bugzilla.suse.com/1181961"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-2990", "package": "suse:libgpg-error0", "purl": "suse:libgpg-error0", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "1.42-150300.9.3.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "An incorrect handling of the supplementary groups in the Buildah container engine might lead to the sensitive information disclosure or possible data modification if an attacker has direct access to the affected container where supplementary groups are used to set access permissions and is able to execute a binary code in that container.", "related_urls": ["https://www.suse.com/security/cve/CVE-2022-2990.html", "https://bugzilla.suse.com/1202812"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2023-4039", "package": "suse:libstdc++6", "purl": "suse:libstdc++6", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "13.2.1+git7813-150000.1.6.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.", "related_urls": ["https://www.suse.com/security/cve/CVE-2023-4039.html", "https://bugzilla.suse.com/1214052"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2012-3406", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "The vfprintf function in stdio-common/vfprintf.c in GNU C Library (aka glibc) 2.5, 2.12, and probably other versions does not \"properly restrict the use of\" the alloca function when allocating the SPECS array, which allows context-dependent attackers to bypass the FORTIFY_SOURCE format-string protection mechanism and cause a denial of service (crash) or possibly execute arbitrary code via a crafted format string using positional parameters and a large number of format specifiers, a different vulnerability than CVE-2012-3404 and CVE-2012-3405.", "related_urls": ["https://www.suse.com/security/cve/CVE-2012-3406.html", "https://bugzilla.suse.com/770891", "https://bugzilla.suse.com/826666"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-33560", "package": "debian:libgcrypt20", "purl": "debian:libgcrypt20", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "1.9.4-2", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encry ...\nNOTE: https://eprint.iacr.org/2021/923\nNOTE: https://ibm.github.io/system-security-research-updates/2021/07/20/insecurity-elgamal-pt1\nNOTE: https://ibm.github.io/system-security-research-updates/2021/09/06/insecurity-elgamal-pt2\nNOTE: https://git.gnupg.org/cgi-bin/gitweb.cgi?p=libgcrypt.git;a=commit;h=e8b7f10be275bcedb5fc05ed4837a89bfd605c61 (1.9.x)\nNOTE: Related to CVE-2021-33560, but not a duplicate. Unfortunately scope of CVE-2021-33560 and\nNOTE: CVE-2021-40528 got switched at some point, and CVE-2021-33560 referring to the blinding\nNOTE: hardening. We keep the original association as per 2021-09-19 (until MITRE clarifies on\nNOTE: a query).", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2014-6040", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "GNU C Library (aka glibc) before 2.20 allows context-dependent attackers to cause a denial of service (out-of-bounds read and crash) via a multibyte character value of \"0xffff\" to the iconv function when converting (1) IBM933, (2) IBM935, (3) IBM937, (4) IBM939, or (5) IBM1364 encoded data to UTF-8.", "related_urls": ["https://www.suse.com/security/cve/CVE-2014-6040.html", "https://bugzilla.suse.com/894553", "https://bugzilla.suse.com/903057", "https://bugzilla.suse.com/916222"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-37713", "package": "npm:tar", "purl": "pkg:npm/tar@4.4.19", "package_type": "npm", "package_usage": "N/A", "version": "4.4.19", "fix_version": "4.4.18", "severity": "HIGH", "cvss_score": "8.2", "short_description": "# Arbitrary File Creation/Overwrite on Windows via insufficient relative path sanitization\n### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.\tIf the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.\tThis is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.\tCurrently, it is believed that this check is redundant, but it did catch some oversights in development.", "related_urls": ["https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh", "https://nvd.nist.gov/vuln/detail/CVE-2021-37713", "https://github.com/isaacs/node-tar/commit/52b09e309bcae0c741a7eb79a17ef36e7828b946", "https://github.com/isaacs/node-tar/commit/82eac952f7c10765969ed464e549375854b26edc", "https://github.com/isaacs/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598", "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf", "https://github.com/npm/node-tar", "https://www.npmjs.com/package/tar", "https://www.oracle.com/security-alerts/cpuoct2021.html"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-23807", "package": "npm:jsonpointer", "purl": "pkg:npm/jsonpointer@4.1.0", "package_type": "npm", "package_usage": "N/A", "version": "4.1.0", "fix_version": "5.0.0", "severity": "MEDIUM", "cvss_score": "5.6", "short_description": "# Prototype Pollution in node-jsonpointer\nThis affects the package `jsonpointer` before `5.0.0`. A type confusion vulnerability can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays.\n\n## Related CVE(s)\nCVE-2021-23807, SNYK-JAVA-ORGWEBJARSNPM-1910273, SNYK-JS-JSONPOINTER-1577288", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-23807", "https://github.com/janl/node-jsonpointer/pull/51", "https://github.com/janl/node-jsonpointer/commit/a0345f3550cd9c4d89f33b126390202b89510ad4", "https://github.com/janl/node-jsonpointer", "https://snyk.io/vuln/SNYK-JS-JSONPOINTER-1577288"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2015-1472", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "The ADDW macro in stdio-common/vfscanf.c in the GNU C Library (aka glibc or libc6) before 2.21 does not properly consider data-type size during memory allocation, which allows context-dependent attackers to cause a denial of service (buffer overflow) or possibly have unspecified other impact via a long line containing wide characters that are improperly handled in a wscanf call.", "related_urls": ["https://www.suse.com/security/cve/CVE-2015-1472.html", "https://bugzilla.suse.com/916222", "https://bugzilla.suse.com/920341", "https://bugzilla.suse.com/922243"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2024-28085", "package": "suse:libuuid1", "purl": "suse:libuuid1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.37.2-150400.8.29.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.", "related_urls": ["https://www.suse.com/security/cve/CVE-2024-28085.html", "https://bugzilla.suse.com/1221831"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-24773", "package": "npm:node-forge", "purl": "pkg:npm/node-forge@0.7.6", "package_type": "npm", "package_usage": "N/A", "version": "0.7.6", "fix_version": "1.3.0", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Improper Verification of Cryptographic Signature in `node-forge`\n### Impact\n\nRSA PKCS#1 v1.5 signature verification code is not properly checking `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)", "related_urls": ["https://github.com/digitalbazaar/forge/security/advisories/GHSA-2r2c-g63r-vccr", "https://nvd.nist.gov/vuln/detail/CVE-2022-24773", "https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1", "https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2", "https://github.com/digitalbazaar/forge"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-7720", "package": "npm:node-forge", "purl": "pkg:npm/node-forge@0.7.6", "package_type": "npm", "package_usage": "N/A", "version": "0.7.6", "fix_version": "0.10.0", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "# Prototype Pollution in node-forge\nThe package node-forge before 0.10.0 is vulnerable to Prototype Pollution via the util.setPath function. Note: version 0.10.0 is a breaking change removing the vulnerable functions.\n\n## Related CVE(s)\nCVE-2020-7720, SNYK-JAVA-ORGWEBJARSNPM-609293, SNYK-JS-NODEFORGE-598677", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2020-7720", "https://github.com/digitalbazaar/forge/commit/6a1e3ef74f6eb345bcff1b82184201d1e28b6756", "https://github.com/digitalbazaar/forge", "https://github.com/digitalbazaar/forge/blob/master/CHANGELOG.md", "https://github.com/digitalbazaar/forge/blob/master/CHANGELOG.md#removed", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-609293", "https://snyk.io/vuln/SNYK-JS-NODEFORGE-598677"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2015-8859", "package": "npm:send", "purl": "pkg:npm/send@0.1.4", "package_type": "npm", "package_usage": "N/A", "version": "0.1.4", "fix_version": "0.11.1", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "# Root Path Disclosure in send\nVersions of `send` prior to 0.11.2 are affected by an information leakage vulnerability which may allow an attacker to enumerate paths on the server filesystem.\n\n\n\n## Recommendation\n\nUpdate to version 0.11.1 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2015-8859", "https://github.com/pillarjs/send/pull/70", "https://github.com/pillarjs/send/commit/98a5b89982b38e79db684177cf94730ce7fc7aed", "https://github.com/expressjs/serve-static/blob/master/HISTORY.md#181--2015-01-20", "https://github.com/pillarjs/send", "https://web.archive.org/web/20200227192016/https://www.securityfocus.com/bid/96435", "http://www.openwall.com/lists/oss-security/2016/04/20/11"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-39537", "package": "amazon:ncurses-base", "purl": "amazon:ncurses-base", "package_type": "amazon", "package_usage": "N/A", "version": null, "fix_version": "6.2", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "Package updates are available for Amazon Linux 2022 that fix the following vulnerabilities:\nCVE-2022-29458:\n\tA segmentation fault vulnerability was found in ncurses's convert_strings() function of tinfo/read_entry.c file. This flaw occurs due to corrupted terminfo data, triggering an out-of-bounds read error.\n\nCVE-2021-39537:\n\tThe ncurses package (tic) is susceptible to a heap overflow on crafted input. When the terminfo entry-description compiler processes input, proper bounds checking was not enforced leading to this software flaw. The highest threat from this vulnerability is system availability.", "related_urls": ["http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-39537", "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-29458"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3996", "package": "suse:libblkid1", "purl": "suse:libblkid1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.36.2-150300.4.14.3", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows a local user on a vulnerable system to unmount other users' filesystems that are either world-writable themselves (like /tmp) or mounted in a world-writable directory. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-3996.html", "https://bugzilla.suse.com/1194976"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2012-6656", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "iconvdata/ibm930.c in GNU C Library (aka glibc) before 2.16 allows context-dependent attackers to cause a denial of service (out-of-bounds read) via a multibyte character value of \"0xffff\" to the iconv function when converting IBM930 encoded data to UTF-8.", "related_urls": ["https://www.suse.com/security/cve/CVE-2012-6656.html", "https://bugzilla.suse.com/894556", "https://bugzilla.suse.com/903057"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-0563", "package": "debian:util-linux", "purl": "debian:util-linux", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "", "severity": "LOW", "cvss_score": "2.0", "short_description": "A flaw was found in the util-linux chfn and chsh utilities when compil ...\nNOTE: https://bugzilla.redhat.com/show_bug.cgi?id=2053151\nNOTE: https://lore.kernel.org/util-linux/20220214110609.msiwlm457ngoic6w@ws.net.home/T/#u\nNOTE: https://github.com/util-linux/util-linux/commit/faa5a3a83ad0cb5e2c303edbfd8cd823c9d94c17\nNOTE: util-linux in Debian does build with readline support but chfn and chsh are provided\nNOTE: by src:shadow and util-linux is configured with --disable-chfn-chsh", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-24771", "package": "npm:node-forge", "purl": "pkg:npm/node-forge@0.7.6", "package_type": "npm", "package_usage": "N/A", "version": "0.7.6", "fix_version": "1.3.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Improper Verification of Cryptographic Signature in node-forge\n### Impact\n\nRSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### References\n\nFor more information, please see\n[\"Bleichenbacher's RSA signature forgery based on implementation error\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\nby Hal Finney.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)", "related_urls": ["https://github.com/digitalbazaar/forge/security/advisories/GHSA-cfm4-qjh2-4765", "https://nvd.nist.gov/vuln/detail/CVE-2022-24771", "https://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1", "https://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2", "https://github.com/digitalbazaar/forge"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2012-3480", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "Multiple integer overflows in the (1) strtod, (2) strtof, (3) strtold, (4) strtod_l, and other unspecified \"related functions\" in stdlib in GNU C Library (aka glibc or libc6) 2.16 allow local users to cause a denial of service (application crash) and possibly execute arbitrary code via a long string, which triggers a stack-based buffer overflow.", "related_urls": ["https://www.suse.com/security/cve/CVE-2012-3480.html", "https://bugzilla.suse.com/775690", "https://bugzilla.suse.com/826666", "https://bugzilla.suse.com/968660"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2016-1000236", "package": "npm:cookie-signature", "purl": "pkg:npm/cookie-signature@1.0.1", "package_type": "npm", "package_usage": "N/A", "version": "1.0.1", "fix_version": "1.0.4", "severity": "MEDIUM", "cvss_score": "4.4", "short_description": "# cookie-signature Timing Attack\nAffected versions of `cookie-signature` are vulnerable to timing attacks as a result of using a fail-early comparison instead of a constant-time comparison. \n\nTiming attacks remove the exponential increase in entropy gained from increased secret length, by providing per-character feedback on the correctness of a guess via miniscule timing differences.\n\nUnder favorable network conditions, an attacker can exploit this to guess the secret in no more than `charset*length` guesses, instead of `charset^length` guesses required were the timing attack not present. \n\n\n\n## Recommendation\n\nUpdate to 1.0.4 or later.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2016-1000236", "https://github.com/tj/node-cookie-signature/commit/2c4df6b6cee540f30876198cd0b5bebf28528c07", "https://github.com/tj/node-cookie-signature/commit/39791081692e9e14aa62855369e1c7f80fbfd50e", "https://github.com/tj/node-cookie-signature/commit/4cc5e21e7f59a4ea0b51cd5e9634772d48fab590", "https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=838618", "https://bugzilla.redhat.com/show_bug.cgi?id=1371409", "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-1000236", "https://github.com/tj/node-cookie-signature", "https://security-tracker.debian.org/tracker/CVE-2016-1000236", "https://travis-ci.com/nodejs/security-wg/builds/76423102", "https://www.mail-archive.com/secure-testing-team@lists.alioth.debian.org/msg06583.html", "https://www.npmjs.com/advisories/134"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2013-4332", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "Multiple integer overflows in malloc/malloc.c in the GNU C Library (aka glibc or libc6) 2.18 and earlier allow context-dependent attackers to cause a denial of service (heap corruption) via a large value to the (1) pvalloc, (2) valloc, (3) posix_memalign, (4) memalign, or (5) aligned_alloc functions.", "related_urls": ["https://www.suse.com/security/cve/CVE-2013-4332.html", "https://bugzilla.suse.com/1123874", "https://bugzilla.suse.com/839870", "https://bugzilla.suse.com/882910"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-32050", "package": "npm:mongodb", "purl": "pkg:npm/mongodb@4.16.0", "package_type": "npm", "package_usage": "N/A", "version": "4.16.0", "fix_version": "4.17.0", "severity": "MEDIUM", "cvss_score": "4.2", "short_description": "# MongoDB Driver may publish events containing authentication-related data\nSome MongoDB Drivers may erroneously publish events containing authentication-related data to a command listener configured by an application. The published events may contain security-sensitive data when specific authentication-related commands are executed.\n\nWithout due care, an application may inadvertently expose this sensitive information, e.g., by writing it to a log file. This issue only arises if an application enables the command listener feature (this is not enabled by default).\n\nThis issue affects the MongoDB C Driver 1.0.0 prior to 1.17.7, MongoDB PHP Driver 1.0.0 prior to 1.9.2, MongoDB Swift Driver 1.0.0 prior to 1.1.1, MongoDB Node.js Driver 3.6 prior to 3.6.10, MongoDB Node.js Driver 4.0 prior to 4.17.0 and MongoDB Node.js Driver 5.0 prior to 5.8.0. This issue also affects users of the MongoDB C++ Driver dependent on the C driver 1.0.0 prior to 1.17.7 (C++ driver prior to 3.7.0).", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2021-32050", "https://github.com/mongodb/mongo-php-driver/pull/1235", "https://github.com/mongodb/mongo-swift-driver/pull/643", "https://github.com/mongodb/mongo-php-driver/commit/4495de8313c0d313e4dde906fc7aedf998ee3748", "https://github.com/mongodb/node-mongodb-native/commit/8c8b4c3b8c55f10fb96f63d3bbfa5d408b4ed7d0", "https://jira.mongodb.org/browse/CDRIVER-3797", "https://jira.mongodb.org/browse/CXX-2028", "https://jira.mongodb.org/browse/NODE-3356", "https://jira.mongodb.org/browse/PHPC-1869", "https://jira.mongodb.org/browse/SWIFT-1229", "https://security.netapp.com/advisory/ntap-20231006-0001"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3996", "package": "suse:libmount1", "purl": "suse:libmount1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.36.2-150300.4.14.3", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows a local user on a vulnerable system to unmount other users' filesystems that are either world-writable themselves (like /tmp) or mounted in a world-writable directory. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-3996.html", "https://bugzilla.suse.com/1194976"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2017-16118", "package": "npm:forwarded", "purl": "pkg:npm/forwarded@0.1.0", "package_type": "npm", "package_usage": "N/A", "version": "0.1.0", "fix_version": "0.1.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in forwarded\nAffected versions of `forwarded` are vulnerable to regular expression denial of service when parsing specially crafted user input.\n\n\n## Recommendation\n\nUpdate to version 0.1.2 or later", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2017-16118", "https://github.com/advisories/GHSA-mpcf-4gmh-23w8", "https://www.npmjs.com/advisories/527", "http://www.securityfocus.com/bid/104427"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "GHSA-7wwv-vh3v-89cq", "package": "npm:highlight.js", "purl": "pkg:npm/highlight.js@11.6.0", "package_type": "npm", "package_usage": "N/A", "version": "11.6.0", "fix_version": "10.4.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# ReDOS vulnerabities: multiple grammars\n### Impact: Potential ReDOS vulnerabilities (exponential and polynomial RegEx backtracking)\n\n[oswasp](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS): \n\n> The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\n\nIf are you are using Highlight.js to highlight user-provided data you are possibly vulnerable.\tOn the client-side (in a browser or Electron environment) risks could include lengthy freezes or crashes... On the server-side infinite freezes could occur... effectively preventing users from accessing your app or service (ie, Denial of Service).\n\nThis is an issue with grammars shipped with the parser (and potentially 3rd party grammars also), not the parser itself. If you are using Highlight.js with any of the following grammars you are vulnerable.\tIf you are using `highlightAuto` to detect the language (and have any of these grammars registered) you are vulnerable. Exponential grammars (C, Perl, JavaScript) are auto-registered when using the common grammar subset/library `require('highlight.js/lib/common')` as of 10.4.0 - see https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.4.0/build/highlight.js\n\nAll versions prior to 10.4.1 are vulnerable, including version 9.18.5. \n\n**Grammars with exponential backtracking issues:**\n\n\t- c-like (c, cpp, arduino)\n\t- handlebars (htmlbars)\n\t- gams\n\t- perl\n\t- jboss-cli\n\t- r\n\t- erlang-repl\n\t- powershell\n\t- routeros\n\t- livescript (10.4.0 and 9.18.5 included this fix)\n\t- javascript & typescript (10.4.0 included partial fixes)\n\nAnd of course any aliases of those languages have the same issue. ie: `hpp` is no safer than `cpp`.\n\n**Grammars with polynomial backtracking issues:**\n\n- kotlin\n- gcode\n- d\n- aspectj\n- moonscript\n- coffeescript/livescript\n- csharp\n- scilab\n- crystal\n- elixir\n- basic\n- ebnf\n- ruby\n- fortran/irpf90\n- livecodeserver\n- yaml\n- x86asm\n- dsconfig\n- markdown\n- ruleslanguage\n- xquery\n- sqf\n\nAnd again: any aliases of those languages have the same issue. ie: `ruby` and `rb` share the same ruby issues.\n\n\n### Patches\n\n- Version 10.4.1 resolves these vulnerabilities.\tPlease upgrade.\n\n### Workarounds / Mitigations\n\n- Discontinue use the affected grammars. (or perhaps use only those with poly vs exponential issues)\n- Attempt cherry-picking the grammar fixes into older versions...\n- Attempt using newer CDN versions of any affected languages.\t(ie using an older CDN version of the library with newer CDN grammars).\tYour mileage may vary.\n\n### References\n\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue: https://github.com/highlightjs/highlight.js/issues\n* Email us at [security@highlightjs.com](mailto:security@highlightjs.com)", "related_urls": ["https://github.com/highlightjs/highlight.js/security/advisories/GHSA-7wwv-vh3v-89cq", "https://github.com/highlightjs/highlight.js/commit/373b9d862401162e832ce77305e49b859e110f9c", "https://www.npmjs.com/package/@highlightjs/cdn-assets", "https://www.npmjs.com/package/highlight.js"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-25881", "package": "npm:http-cache-semantics", "purl": "pkg:npm/http-cache-semantics@3.8.1", "package_type": "npm", "package_usage": "N/A", "version": "3.8.1", "fix_version": "4.1.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# http-cache-semantics vulnerable to Regular Expression Denial of Service\nhttp-cache semantics contains an Inefficient Regular Expression Complexity , leading to Denial of Service. This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.", "related_urls": ["https://nvd.nist.gov/vuln/detail/CVE-2022-25881", "https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74", "https://github.com/kornelski/http-cache-semantics", "https://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83", "https://security.netapp.com/advisory/ntap-20230622-0008", "https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3253332", "https://security.snyk.io/vuln/SNYK-JS-HTTPCACHESEMANTICS-3248783"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-32804", "package": "npm:tar", "purl": "pkg:npm/tar@4.4.19", "package_type": "npm", "package_usage": "N/A", "version": "4.4.19", "fix_version": "3.2.2", "severity": "HIGH", "cvss_score": "8.2", "short_description": "# Arbitrary File Creation/Overwrite due to insufficient absolute path sanitization\n### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. \n\nThis logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. \n\n### Patches\n\n3.2.2 || 4.4.14 || 5.0.6 || 6.1.1\n\nNOTE: an adjacent issue [CVE-2021-32803](https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw) affects this release level. Please ensure you update to the latest patch levels that address CVE-2021-32803 as well if this adjacent issue affects your `node-tar` use case.\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths.\n\n```js\nconst path = require('path')\nconst tar = require('tar')\n\ntar.x({\n\tfile: 'archive.tgz',\n\t// either add this function...\n\tonentry: (entry) => {\n\t\tif (path.isAbsolute(entry.path)) {\n\t\t\tentry.path = sanitizeAbsolutePathSomehow(entry.path)\n\t\t\tentry.absolute = path.resolve(entry.path)\n\t\t}\n\t},\n\n\t// or this one\n\tfilter: (file, entry) => {\n\t\tif (path.isAbsolute(entry.path)) {\n\t\t\treturn false\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.", "related_urls": ["https://github.com/npm/node-tar/security/advisories/GHSA-3jfq-g458-7qm9", "https://nvd.nist.gov/vuln/detail/CVE-2021-32804", "https://github.com/npm/node-tar/commit/1f036ca23f64a547bdd6c79c1a44bc62e8115da4", "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf", "https://github.com/npm/node-tar", "https://www.npmjs.com/advisories/1770", "https://www.npmjs.com/package/tar", "https://www.oracle.com/security-alerts/cpuoct2021.html"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2012-4412", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.18.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "Integer overflow in string/strcoll_l.c in the GNU C Library (aka glibc or libc6) 2.17 and earlier allows context-dependent attackers to cause a denial of service (crash) or possibly execute arbitrary code via a long string, which triggers a heap-based buffer overflow.", "related_urls": ["https://www.suse.com/security/cve/CVE-2012-4412.html", "https://bugzilla.suse.com/779320", "https://bugzilla.suse.com/848783", "https://bugzilla.suse.com/882910", "https://bugzilla.suse.com/920169", "https://bugzilla.suse.com/920338"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2011-3172", "package": "suse:pam-modules", "purl": "suse:pam-modules", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "11-1.27.3.1", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A vulnerability in pam_modules of SUSE Linux Enterprise allows attackers to log into accounts that should have been disabled. Affected releases are SUSE Linux Enterprise: versions prior to 12.", "related_urls": ["https://www.suse.com/security/cve/CVE-2011-3172.html", "https://bugzilla.suse.com/1149683", "https://bugzilla.suse.com/707645"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3996", "package": "suse:libsmartcols1", "purl": "suse:libsmartcols1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.36.2-150300.4.14.3", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows a local user on a vulnerable system to unmount other users' filesystems that are either world-writable themselves (like /tmp) or mounted in a world-writable directory. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-3996.html", "https://bugzilla.suse.com/1194976"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-14155", "package": "debian:pcre3", "purl": "debian:pcre3", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "8.39-13", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "libpcre in PCRE before 8.44 allows an integer overflow via a large num ...\nNOTE: https://bugs.exim.org/show_bug.cgi?id=2463\nNOTE: Fixed by: https://vcs.pcre.org/pcre?view=revision&revision=1761 (8.44)", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-3995", "package": "suse:libblkid1", "purl": "suse:libblkid1", "package_type": "suse", "package_usage": "N/A", "version": null, "fix_version": "2.36.2-150300.4.14.3", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "A logic error was found in the libmount library of util-linux in the function that allows an unprivileged user to unmount a FUSE filesystem. This flaw allows an unprivileged local attacker to unmount FUSE filesystems that belong to certain other users who have a UID that is a prefix of the UID of the attacker in its string form. An attacker may use this flaw to cause a denial of service to applications that use the affected filesystems.", "related_urls": ["https://www.suse.com/security/cve/CVE-2021-3995.html", "https://bugzilla.suse.com/1194976"], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2019-20838", "package": "debian:pcre3", "purl": "debian:pcre3", "package_type": "debian", "package_usage": "N/A", "version": null, "fix_version": "", "severity": "LOW", "cvss_score": "2.0", "short_description": "libpcre in PCRE before 8.43 allows a subject buffer over-read in JIT w ...\nNOTE: Fixed by: https://vcs.pcre.org/pcre?view=revision&revision=1740 (8.43)\nNOTE: Only an issue when UTF support disabled", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
