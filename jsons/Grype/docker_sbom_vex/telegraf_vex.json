{
 "matches": [
  {
   "vulnerability": {
    "id": "GHSA-5pf6-2qwx-pxm2",
    "dataSource": "https://github.com/advisories/GHSA-5pf6-2qwx-pxm2",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-5pf6-2qwx-pxm2"
    ],
    "description": "Go SDK for CloudEvents's use of WithRoundTripper to create a Client leaks credentials",
    "cvss": [],
    "fix": {
     "versions": [
      "2.15.2"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [
    {
     "id": "CVE-2024-28110",
     "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2024-28110",
     "namespace": "nvd:cpe",
     "severity": "High",
     "urls": [
      "https://github.com/cloudevents/sdk-go/blob/67e389964131d55d65cd14b4eb32d57a47312695/v2/protocol/http/protocol.go#L104-L110",
      "https://github.com/cloudevents/sdk-go/commit/de2f28370b0d2a0f64f92c0c6139fa4b8a7c3851",
      "https://github.com/cloudevents/sdk-go/security/advisories/GHSA-5pf6-2qwx-pxm2"
     ],
     "description": "Go SDK for CloudEvents is the official CloudEvents SDK to integrate applications with CloudEvents. Prior to version 2.15.2, using cloudevents.WithRoundTripper to create a cloudevents.Client with an authenticated http.RoundTripper causes the go-sdk to leak credentials to arbitrary endpoints. When the transport is populated with an authenticated transport, then http.DefaultClient is modified with the authenticated transport and will start to send Authorization tokens to any endpoint it is used to contact. Version 2.15.2 patches this issue.",
     "cvss": [
      {
       "source": "security-advisories@github.com",
       "type": "Secondary",
       "version": "3.1",
       "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
       "metrics": {
        "baseScore": 7.5,
        "exploitabilityScore": 3.9,
        "impactScore": 3.6
       },
       "vendorMetadata": {}
      }
     ]
    }
   ],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "github.com/cloudevents/sdk-go/v2",
       "version": "2.15.0"
      }
     },
     "found": {
      "versionConstraint": "<=2.15.1 (unknown)",
      "vulnerabilityID": "GHSA-5pf6-2qwx-pxm2"
     }
    }
   ],
   "artifact": {
    "id": "adf533d69cb5db78",
    "name": "github.com/cloudevents/sdk-go/v2",
    "version": "2.15.0",
    "type": "go-module",
    "locations": [],
    "language": "go",
    "licenses": [],
    "cpes": [],
    "purl": "pkg:golang/github.com/cloudevents/sdk-go@2.15.0#v2",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "",
     "architecture": ""
    }
   }
  },
  {
   "vulnerability": {
    "id": "GHSA-xw73-rw38-6vjc",
    "dataSource": "https://github.com/advisories/GHSA-xw73-rw38-6vjc",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-xw73-rw38-6vjc"
    ],
    "description": "Classic builder cache poisoning",
    "cvss": [
     {
      "version": "3.1",
      "vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L",
      "metrics": {
       "baseScore": 6.9,
       "exploitabilityScore": 1,
       "impactScore": 5.3
      },
      "vendorMetadata": {
       "base_severity": "Medium",
       "status": "N/A"
      }
     }
    ],
    "fix": {
     "versions": [
      "25.0.2"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [
    {
     "id": "CVE-2024-24557",
     "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2024-24557",
     "namespace": "nvd:cpe",
     "severity": "High",
     "urls": [
      "https://github.com/moby/moby/commit/3e230cfdcc989dc524882f6579f9e0dac77400ae",
      "https://github.com/moby/moby/security/advisories/GHSA-xw73-rw38-6vjc"
     ],
     "description": "Moby is an open-source project created by Docker to enable software containerization. The classic builder cache system is prone to cache poisoning if the image is built FROM scratch. Also, changes to some instructions (most important being HEALTHCHECK and ONBUILD) would not cause a cache miss. An attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps. 23.0+ users are only affected if they explicitly opted out of Buildkit (DOCKER_BUILDKIT=0 environment variable) or are using the /build API endpoint. All users on versions older than 23.0 could be impacted. Image build API endpoint (/build) and ImageBuild function from github.com/docker/docker/client is also affected as it the uses classic builder by default. Patches are included in 24.0.9 and 25.0.2 releases.",
     "cvss": [
      {
       "source": "nvd@nist.gov",
       "type": "Primary",
       "version": "3.1",
       "vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
       "metrics": {
        "baseScore": 7.8,
        "exploitabilityScore": 1.8,
        "impactScore": 5.9
       },
       "vendorMetadata": {}
      },
      {
       "source": "security-advisories@github.com",
       "type": "Secondary",
       "version": "3.1",
       "vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L",
       "metrics": {
        "baseScore": 6.9,
        "exploitabilityScore": 1,
        "impactScore": 5.3
       },
       "vendorMetadata": {}
      }
     ]
    }
   ],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "github.com/docker/docker",
       "version": "25.0.0+incompatible"
      }
     },
     "found": {
      "versionConstraint": ">=25.0.0,<25.0.2 (unknown)",
      "vulnerabilityID": "GHSA-xw73-rw38-6vjc"
     }
    }
   ],
   "artifact": {
    "id": "d620f482609faa10",
    "name": "github.com/docker/docker",
    "version": "25.0.0+incompatible",
    "type": "go-module",
    "locations": [],
    "language": "go",
    "licenses": [],
    "cpes": [],
    "purl": "pkg:golang/github.com/docker/docker@25.0.0+incompatible",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "",
     "architecture": ""
    }
   }
  },
  {
   "vulnerability": {
    "id": "GHSA-mq39-4gv4-mvpx",
    "dataSource": "https://github.com/advisories/GHSA-mq39-4gv4-mvpx",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-mq39-4gv4-mvpx"
    ],
    "description": "Moby's external DNS requests from 'internal' networks could lead to data exfiltration",
    "cvss": [
     {
      "version": "3.1",
      "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "metrics": {
       "baseScore": 5.9,
       "exploitabilityScore": 2.2,
       "impactScore": 3.6
      },
      "vendorMetadata": {
       "base_severity": "Medium",
       "status": "N/A"
      }
     }
    ],
    "fix": {
     "versions": [
      "25.0.5"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [
    {
     "id": "CVE-2024-29018",
     "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2024-29018",
     "namespace": "nvd:cpe",
     "severity": "Medium",
     "urls": [
      "https://github.com/moby/moby/pull/46609",
      "https://github.com/moby/moby/security/advisories/GHSA-mq39-4gv4-mvpx"
     ],
     "description": "Moby is an open source container framework that is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. Moby's networking implementation allows for many networks, each with their own IP address range and gateway, to be defined. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses. The host serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an internal network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel's various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery, and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver. This request is made from the container's network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to an internal network will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\n\nMany systems run a local forwarding DNS resolver. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host's configured resolver, as they cannot reach these addresses on the host loopback device. To bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` detects this scenario and instead forward DNS requests from the host namework namespace. The loopback resolver then forwards the requests to its configured upstream resolvers, as expected.\n\nBecause `dockerd` forwards DNS requests to the host loopback device, bypassing the container network namespace's normal routing semantics entirely, internal networks can unexpectedly forward DNS requests to an external nameserver. By registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers.\n\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\n\nMoby releases 26.0.0, 25.0.4, and 23.0.11 are patched to prevent forwarding any DNS requests from internal networks. As a workaround, run containers intended to be solely attached to internal networks with a custom upstream address, which will force all upstream DNS queries to be resolved from the container's network namespace.",
     "cvss": [
      {
       "source": "security-advisories@github.com",
       "type": "Secondary",
       "version": "3.1",
       "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
       "metrics": {
        "baseScore": 5.9,
        "exploitabilityScore": 2.2,
        "impactScore": 3.6
       },
       "vendorMetadata": {}
      }
     ]
    }
   ],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "github.com/docker/docker",
       "version": "25.0.0+incompatible"
      }
     },
     "found": {
      "versionConstraint": ">=25.0.0,<25.0.5 (unknown)",
      "vulnerabilityID": "GHSA-mq39-4gv4-mvpx"
     }
    }
   ],
   "artifact": {
    "id": "d620f482609faa10",
    "name": "github.com/docker/docker",
    "version": "25.0.0+incompatible",
    "type": "go-module",
    "locations": [],
    "language": "go",
    "licenses": [],
    "cpes": [],
    "purl": "pkg:golang/github.com/docker/docker@25.0.0+incompatible",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "",
     "architecture": ""
    }
   }
  },
  {
   "vulnerability": {
    "id": "GHSA-mrww-27vc-gghv",
    "dataSource": "https://github.com/advisories/GHSA-mrww-27vc-gghv",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-mrww-27vc-gghv"
    ],
    "description": "pgx SQL Injection via Protocol Message Size Overflow",
    "cvss": [],
    "fix": {
     "versions": [
      "2.3.3"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [
    {
     "id": "CVE-2024-27304",
     "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2024-27304",
     "namespace": "nvd:cpe",
     "severity": "Critical",
     "urls": [
      "https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007",
      "https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8",
      "https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4",
      "https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8",
      "https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df",
      "https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv"
     ],
     "description": "pgx is a PostgreSQL driver and toolkit for Go. SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control. The problem is resolved in v4.18.2 and v5.5.4. As a workaround, reject user input large enough to cause a single query or bind message to exceed 4 GB in size.",
     "cvss": [
      {
       "source": "security-advisories@github.com",
       "type": "Secondary",
       "version": "3.1",
       "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
       "metrics": {
        "baseScore": 9.8,
        "exploitabilityScore": 3.9,
        "impactScore": 5.9
       },
       "vendorMetadata": {}
      }
     ]
    }
   ],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "github.com/jackc/pgproto3/v2",
       "version": "2.3.2"
      }
     },
     "found": {
      "versionConstraint": "<2.3.3 (unknown)",
      "vulnerabilityID": "GHSA-mrww-27vc-gghv"
     }
    }
   ],
   "artifact": {
    "id": "4b26aebd9f590051",
    "name": "github.com/jackc/pgproto3/v2",
    "version": "2.3.2",
    "type": "go-module",
    "locations": [],
    "language": "go",
    "licenses": [],
    "cpes": [],
    "purl": "pkg:golang/github.com/jackc/pgproto3@2.3.2#v2",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "",
     "architecture": ""
    }
   }
  },
  {
   "vulnerability": {
    "id": "GHSA-7jwh-3vrq-q3m8",
    "dataSource": "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8"
    ],
    "description": "pgproto3 SQL Injection via Protocol Message Size Overflow",
    "cvss": [],
    "fix": {
     "versions": [
      "2.3.3"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "github.com/jackc/pgproto3/v2",
       "version": "2.3.2"
      }
     },
     "found": {
      "versionConstraint": "<2.3.3 (unknown)",
      "vulnerabilityID": "GHSA-7jwh-3vrq-q3m8"
     }
    }
   ],
   "artifact": {
    "id": "4b26aebd9f590051",
    "name": "github.com/jackc/pgproto3/v2",
    "version": "2.3.2",
    "type": "go-module",
    "locations": [],
    "language": "go",
    "licenses": [],
    "cpes": [],
    "purl": "pkg:golang/github.com/jackc/pgproto3@2.3.2#v2",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "",
     "architecture": ""
    }
   }
  },
  {
   "vulnerability": {
    "id": "GHSA-mrww-27vc-gghv",
    "dataSource": "https://github.com/advisories/GHSA-mrww-27vc-gghv",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-mrww-27vc-gghv"
    ],
    "description": "pgx SQL Injection via Protocol Message Size Overflow",
    "cvss": [],
    "fix": {
     "versions": [
      "4.18.2"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [
    {
     "id": "CVE-2024-27304",
     "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2024-27304",
     "namespace": "nvd:cpe",
     "severity": "Critical",
     "urls": [
      "https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007",
      "https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8",
      "https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4",
      "https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8",
      "https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df",
      "https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv"
     ],
     "description": "pgx is a PostgreSQL driver and toolkit for Go. SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control. The problem is resolved in v4.18.2 and v5.5.4. As a workaround, reject user input large enough to cause a single query or bind message to exceed 4 GB in size.",
     "cvss": [
      {
       "source": "security-advisories@github.com",
       "type": "Secondary",
       "version": "3.1",
       "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
       "metrics": {
        "baseScore": 9.8,
        "exploitabilityScore": 3.9,
        "impactScore": 5.9
       },
       "vendorMetadata": {}
      }
     ]
    }
   ],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "github.com/jackc/pgx/v4",
       "version": "4.18.1"
      }
     },
     "found": {
      "versionConstraint": "<4.18.2 (unknown)",
      "vulnerabilityID": "GHSA-mrww-27vc-gghv"
     }
    }
   ],
   "artifact": {
    "id": "95982054b333191e",
    "name": "github.com/jackc/pgx/v4",
    "version": "4.18.1",
    "type": "go-module",
    "locations": [],
    "language": "go",
    "licenses": [],
    "cpes": [],
    "purl": "pkg:golang/github.com/jackc/pgx@4.18.1#v4",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "",
     "architecture": ""
    }
   }
  },
  {
   "vulnerability": {
    "id": "GHSA-m7wr-2xf7-cm9p",
    "dataSource": "https://github.com/advisories/GHSA-m7wr-2xf7-cm9p",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-m7wr-2xf7-cm9p"
    ],
    "description": "pgx SQL Injection via Line Comment Creation",
    "cvss": [],
    "fix": {
     "versions": [
      "4.18.2"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [
    {
     "id": "CVE-2024-27289",
     "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2024-27289",
     "namespace": "nvd:cpe",
     "severity": "High",
     "urls": [
      "https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df",
      "https://github.com/jackc/pgx/security/advisories/GHSA-m7wr-2xf7-cm9p"
     ],
     "description": "pgx is a PostgreSQL driver and toolkit for Go. Prior to version 4.18.2, SQL injection can occur when all of the following conditions are met: the non-default simple protocol is used; a placeholder for a numeric value must be immediately preceded by a minus; there must be a second placeholder for a string value after the first placeholder; both must be on the same line; and both parameter values must be user-controlled. The problem is resolved in v4.18.2. As a workaround, do not use the simple protocol or do not place a minus directly before a placeholder.\n",
     "cvss": [
      {
       "source": "security-advisories@github.com",
       "type": "Secondary",
       "version": "3.1",
       "vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
       "metrics": {
        "baseScore": 8.1,
        "exploitabilityScore": 2.2,
        "impactScore": 5.9
       },
       "vendorMetadata": {}
      }
     ]
    }
   ],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "github.com/jackc/pgx/v4",
       "version": "4.18.1"
      }
     },
     "found": {
      "versionConstraint": "<4.18.2 (unknown)",
      "vulnerabilityID": "GHSA-m7wr-2xf7-cm9p"
     }
    }
   ],
   "artifact": {
    "id": "95982054b333191e",
    "name": "github.com/jackc/pgx/v4",
    "version": "4.18.1",
    "type": "go-module",
    "locations": [],
    "language": "go",
    "licenses": [],
    "cpes": [],
    "purl": "pkg:golang/github.com/jackc/pgx@4.18.1#v4",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "",
     "architecture": ""
    }
   }
  },
  {
   "vulnerability": {
    "id": "GHSA-7jwh-3vrq-q3m8",
    "dataSource": "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-7jwh-3vrq-q3m8"
    ],
    "description": "pgproto3 SQL Injection via Protocol Message Size Overflow",
    "cvss": [],
    "fix": {
     "versions": [
      "4.18.2"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "github.com/jackc/pgx/v4",
       "version": "4.18.1"
      }
     },
     "found": {
      "versionConstraint": "<4.18.2 (unknown)",
      "vulnerabilityID": "GHSA-7jwh-3vrq-q3m8"
     }
    }
   ],
   "artifact": {
    "id": "95982054b333191e",
    "name": "github.com/jackc/pgx/v4",
    "version": "4.18.1",
    "type": "go-module",
    "locations": [],
    "language": "go",
    "licenses": [],
    "cpes": [],
    "purl": "pkg:golang/github.com/jackc/pgx@4.18.1#v4",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "",
     "architecture": ""
    }
   }
  },
  {
   "vulnerability": {
    "id": "GHSA-4v7x-pqxf-cx7m",
    "dataSource": "https://github.com/advisories/GHSA-4v7x-pqxf-cx7m",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-4v7x-pqxf-cx7m"
    ],
    "description": "net/http, x/net/http2: close connections when receiving too many headers",
    "cvss": [
     {
      "version": "3.1",
      "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "metrics": {
       "baseScore": 5.3,
       "exploitabilityScore": 3.9,
       "impactScore": 1.4
      },
      "vendorMetadata": {
       "base_severity": "Medium",
       "status": "N/A"
      }
     }
    ],
    "fix": {
     "versions": [
      "0.23.0"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [
    {
     "id": "CVE-2023-45288",
     "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2023-45288",
     "namespace": "nvd:cpe",
     "severity": "Unknown",
     "urls": [
      "https://go.dev/cl/576155",
      "https://go.dev/issue/65051",
      "https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M",
      "https://pkg.go.dev/vuln/GO-2024-2687",
      "https://security.netapp.com/advisory/ntap-20240419-0009/"
     ],
     "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
     "cvss": []
    }
   ],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "golang.org/x/net",
       "version": "0.21.0"
      }
     },
     "found": {
      "versionConstraint": "<0.23.0 (unknown)",
      "vulnerabilityID": "GHSA-4v7x-pqxf-cx7m"
     }
    }
   ],
   "artifact": {
    "id": "a9268aa15c35fca8",
    "name": "golang.org/x/net",
    "version": "0.21.0",
    "type": "go-module",
    "locations": [],
    "language": "go",
    "licenses": [],
    "cpes": [],
    "purl": "pkg:golang/golang.org/x/net@0.21.0",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "",
     "architecture": ""
    }
   }
  },
  {
   "vulnerability": {
    "id": "GHSA-8r3f-844c-mc37",
    "dataSource": "https://github.com/advisories/GHSA-8r3f-844c-mc37",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-8r3f-844c-mc37"
    ],
    "description": "Golang protojson.Unmarshal function infinite loop when unmarshaling certain forms of invalid JSON",
    "cvss": [],
    "fix": {
     "versions": [
      "1.33.0"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [
    {
     "id": "CVE-2024-24786",
     "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2024-24786",
     "namespace": "nvd:cpe",
     "severity": "Unknown",
     "urls": [
      "https://go.dev/cl/569356",
      "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JDMBHAVSDU2FBDZ45U3A2VLSM35OJ2HU/",
      "https://pkg.go.dev/vuln/GO-2024-2611"
     ],
     "description": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
     "cvss": []
    }
   ],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "google.golang.org/protobuf",
       "version": "1.32.0"
      }
     },
     "found": {
      "versionConstraint": "<1.33.0 (unknown)",
      "vulnerabilityID": "GHSA-8r3f-844c-mc37"
     }
    }
   ],
   "artifact": {
    "id": "632d7911517b5644",
    "name": "google.golang.org/protobuf",
    "version": "1.32.0",
    "type": "go-module",
    "locations": [],
    "language": "go",
    "licenses": [],
    "cpes": [],
    "purl": "pkg:golang/google.golang.org/protobuf@1.32.0",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "",
     "architecture": ""
    }
   }
  }
 ],
 "source": {
  "type": "image",
  "target": {
   "userInput": "",
   "imageID": "",
   "manifestDigest": "",
   "mediaType": "",
   "tags": [],
   "imageSize": 0,
   "layers": null,
   "manifest": null,
   "config": null,
   "repoDigests": [],
   "architecture": "",
   "os": ""
  }
 },
 "distro": {
  "name": "",
  "version": "",
  "idLike": null
 },
 "descriptor": {
  "name": "grype",
  "version": "0.74.0",
  "configuration": {
   "output": [
    "json"
   ],
   "file": "",
   "distro": "",
   "add-cpes-if-none": false,
   "output-template-file": "",
   "check-for-app-update": true,
   "only-fixed": false,
   "only-notfixed": false,
   "ignore-wontfix": "",
   "platform": "",
   "search": {
    "scope": "squashed",
    "unindexed-archives": false,
    "indexed-archives": true
   },
   "ignore": null,
   "exclude": [],
   "db": {
    "cache-dir": "/Users/katushka/Library/Caches/grype/db",
    "update-url": "https://toolbox-data.anchore.io/grype/databases/listing.json",
    "ca-cert": "",
    "auto-update": true,
    "validate-by-hash-on-start": false,
    "validate-age": true,
    "max-allowed-built-age": 432000000000000
   },
   "externalSources": {
    "enable": false,
    "maven": {
     "searchUpstreamBySha1": true,
     "baseUrl": "https://search.maven.org/solrsearch/select"
    }
   },
   "match": {
    "java": {
     "using-cpes": false
    },
    "dotnet": {
     "using-cpes": false
    },
    "golang": {
     "using-cpes": false,
     "always-use-cpe-for-stdlib": true
    },
    "javascript": {
     "using-cpes": false
    },
    "python": {
     "using-cpes": false
    },
    "ruby": {
     "using-cpes": false
    },
    "rust": {
     "using-cpes": false
    },
    "stock": {
     "using-cpes": true
    }
   },
   "fail-on-severity": "",
   "registry": {
    "insecure-skip-tls-verify": false,
    "insecure-use-http": false,
    "auth": null,
    "ca-cert": ""
   },
   "show-suppressed": false,
   "by-cve": false,
   "name": "",
   "default-image-pull-source": "",
   "vex-documents": [],
   "vex-add": []
  },
  "db": {
   "built": "2024-04-20T01:25:41Z",
   "schemaVersion": 5,
   "location": "/Users/katushka/Library/Caches/grype/db/5",
   "checksum": "sha256:16b261c20c43828088d3530bdb10577ad87b9d33cfbfcaf051c3af61ba7e53ca",
   "error": null
  },
  "timestamp": "2024-04-20T21:50:32.222776+02:00"
 }
}
